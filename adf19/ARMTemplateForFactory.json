{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "adf19"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage2'"
		},
		"AzureBlobStorage3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage3'"
		},
		"AzureBlobStorage4_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage4'"
		},
		"AzureBlobStorage5_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage5'"
		},
		"AzureBlobStorage6_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage6'"
		},
		"AzureBlobStorage7_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage7'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"AzureSqlDatabase2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase2'"
		},
		"AzureSqlDatabase3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase3'"
		},
		"AzureSqlDatabase4_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase4'"
		},
		"AzureSqlDatabase5_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase5'"
		},
		"AzureSqlDatabase6_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase6'"
		},
		"AzureSqlDatabase7_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase7'"
		},
		"AzureSqlDatabase_Inventory_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase_Inventory'"
		},
		"B050819_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'B050819'"
		},
		"CSV_linkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CSV_linkedService'"
		},
		"CSVtoSQLAzure_DK_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CSVtoSQLAzure_DK'"
		},
		"Cateorydata_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Cateorydata'"
		},
		"DataLink_DK_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DataLink_DK'"
		},
		"Dinesh_DB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Dinesh_DB'"
		},
		"EMP_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'EMP'"
		},
		"Incremental_Load_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Incremental_Load'"
		},
		"Inventory_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Inventory'"
		},
		"Inventory1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Inventory1'"
		},
		"Lookupandforeachcategory_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Lookupandforeachcategory'"
		},
		"SQL_Categories_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQL_Categories'"
		},
		"SVAzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SVAzureBlobStorage2'"
		},
		"SV_SqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SV_SqlServer'"
		},
		"SV_Sqlservers_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SV_Sqlservers'"
		},
		"SalestoAzure_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SalestoAzure'"
		},
		"SqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer'"
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer1'"
		},
		"SqlServer2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer2'"
		},
		"SqlServer3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer3'"
		},
		"SqlServer4_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer4'"
		},
		"SqlServer_new_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer_new'"
		},
		"SqlServeronprem_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServeronprem'"
		},
		"Sqlcategories_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Sqlcategories'"
		},
		"Success_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Success'"
		},
		"YEarData_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'YEarData'"
		},
		"Year2008_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Year2008'"
		},
		"adventureSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'adventureSqlServer'"
		},
		"linkedService1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedService1'"
		},
		"SourceDataset_3kp_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "Sample.csv"
		},
		"SourceDataset_3kp_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "filecontainer"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Azureblod')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Blobtosql",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Blobtosql",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Blobtosql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Onprim",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Onprim",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Onprim')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Conditionalpipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CondtionalSpilt",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CondtionalSpilt",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CondtionalSpilt')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_tmr')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_tmr",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[persons]"
							},
							{
								"name": "Destination",
								"value": "[[dbo].[persons]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"pname": "pname",
									"age": "age",
									"salary": "salary",
									"companyname": "companyname",
									"pid": "pid",
									"gender": "gender"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_tmr",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_tmr",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_tmr')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_tmr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copydatafromdbtoblob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_j35",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "[[dbo].[Test]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from Test"
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBatchSize": 10000
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "SVAzureBlobStorage2",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"ID": "ID",
									"Names": "Names"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_j35",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_j35",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_j35')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_j35')]",
				"[concat(variables('factoryId'), '/linkedServices/SVAzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimEmployeePipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LoadDimEmployee",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DimEmployeeLoader21",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Employees1": {},
									"DimEmployees": {},
									"sinkNew": {},
									"sinkUpdates": {},
									"sinkInactive": {}
								}
							},
							"staging": {}
						}
					}
				],
				"folder": {
					"name": "SCD"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DimEmployeeLoader21')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dinesh_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyCSV_DK",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CopyCSV_DK",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceDK": {},
									"CSVDataBefore2015": {},
									"CSVDataAfter2015": {}
								}
							},
							"staging": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CopyCSV_DK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dynamicvalue')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "exec SP_flag1"
							},
							"dataset": {
								"referenceName": "Azure_Conditions_split",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Stored Procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_parameterflag]",
							"storedProcedureParameters": {
								"ID": {
									"value": {
										"value": "@{activity('Lookup1').output.firstRow.flag}",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SqlServer1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"lookupParameter": {
						"type": "string"
					}
				},
				"variables": {
					"lookupvariable": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Azure_Conditions_split')]",
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dynamis')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT 2 AS ID"
							},
							"dataset": {
								"referenceName": "DestinationDataset_j35",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@array(activity('Lookup1').output)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Stored Procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SP_parameterflag]",
										"storedProcedureParameters": {
											"ID": {
												"value": {
													"value": "int(2)",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"rtr": {
						"type": "string"
					}
				},
				"variables": {
					"RRR": {
						"type": "Array",
						"defaultValue": [
							1,
							2,
							3,
							4
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_j35')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SV_CopyPipeline_nuzontA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_nuz",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "[[dbo].[Sample_Test_DK]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * FROM [AdventureWorks2016].[HumanResources].[Employee]"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BusinessEntityID",
											"type": "Int32"
										},
										"sink": {
											"name": "BusinessEntityID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NationalIDNumber",
											"type": "String"
										},
										"sink": {
											"name": "NationalIDNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LoginID",
											"type": "String"
										},
										"sink": {
											"name": "LoginID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OrganizationNode"
										},
										"sink": {
											"name": "OrganizationNode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OrganizationLevel",
											"type": "Int16"
										},
										"sink": {
											"name": "OrganizationLevel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "JobTitle",
											"type": "String"
										},
										"sink": {
											"name": "JobTitle",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SickLeaveHours",
											"type": "Int16"
										},
										"sink": {
											"name": "SickLeaveHours",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CurrentFlag",
											"type": "Boolean"
										},
										"sink": {
											"name": "CurrentFlag",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "rowguid",
											"type": "Guid"
										},
										"sink": {
											"name": "rowguid",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BirthDate",
											"type": "Date"
										},
										"sink": {
											"name": "BirthDate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MaritalStatus",
											"type": "String"
										},
										"sink": {
											"name": "MaritalStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String"
										},
										"sink": {
											"name": "Gender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HireDate",
											"type": "Date"
										},
										"sink": {
											"name": "HireDate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SalariedFlag",
											"type": "Boolean"
										},
										"sink": {
											"name": "SalariedFlag",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VacationHours",
											"type": "Int16"
										},
										"sink": {
											"name": "VacationHours",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_nuz",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_nuz",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_nuz')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_nuz')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SV_SCVtoSQL_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SV_CSVtoSQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SV_CSVtoSQL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CSVFile": {},
									"SQL": {}
								}
							},
							"staging": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SV_CSVtoSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SimplpyCopyData_DK')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_qb4",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "[[dbo].[Sample_Test_DK]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from Sample_EMP where BusinessEntityID between 1 and 100"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BusinessEntityID",
											"type": "String"
										},
										"sink": {
											"name": "BusinessEntityID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NationalIDNumber",
											"type": "String"
										},
										"sink": {
											"name": "NationalIDNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LoginID",
											"type": "String"
										},
										"sink": {
											"name": "LoginID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OrganizationNode",
											"type": "String"
										},
										"sink": {
											"name": "OrganizationNode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OrganizationLevel",
											"type": "String"
										},
										"sink": {
											"name": "OrganizationLevel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "JobTitle",
											"type": "String"
										},
										"sink": {
											"name": "JobTitle",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SickLeaveHours",
											"type": "String"
										},
										"sink": {
											"name": "SickLeaveHours",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CurrentFlag",
											"type": "String"
										},
										"sink": {
											"name": "CurrentFlag",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "rowguid",
											"type": "String"
										},
										"sink": {
											"name": "rowguid",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "String"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BirthDate",
											"type": "String"
										},
										"sink": {
											"name": "BirthDate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MaritalStatus",
											"type": "String"
										},
										"sink": {
											"name": "MaritalStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String"
										},
										"sink": {
											"name": "Gender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HireDate",
											"type": "String"
										},
										"sink": {
											"name": "HireDate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SalariedFlag",
											"type": "String"
										},
										"sink": {
											"name": "SalariedFlag",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VacationHours",
											"type": "String"
										},
										"sink": {
											"name": "VacationHours",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_qb4",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_qb4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_qb4')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_qb4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lookup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set Variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('name')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Blobstore",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "Blobstore",
											"type": "DataFlowReference",
											"parameters": {},
											"datasetParameters": {
												"source1": {},
												"sink1": {}
											}
										},
										"staging": {}
									}
								}
							]
						}
					},
					{
						"name": "Set Variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "arrays",
							"value": {
								"value": "@variables('name')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Stored Procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "test1",
								"value": "?"
							}
						],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_Flag]"
						},
						"linkedServiceName": {
							"referenceName": "SqlServer1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Stored Procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_Flag]"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"parameters": {
					"sp": {
						"type": "int",
						"defaultValue": 0
					},
					"Sp_ouptput": {
						"type": "Array"
					}
				},
				"variables": {
					"name": {
						"type": "Array",
						"defaultValue": [
							1,
							2
						]
					},
					"arrays": {
						"type": "Array",
						"defaultValue": [
							1
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/dataflows/Blobstore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "json",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "json",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline10')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Onprim",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Onprim",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Onprim')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Test",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Test",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Success",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Success",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"folderPath": "filecontainer"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Success')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQLtoAzureSQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SQLtoAzureSQL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SQLtoAzureSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQLtoAzureSQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SQLtoAzureSQL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SQLtoAzureSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "aZ",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "aZ",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/aZ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline7')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Azuretoonprim",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Azuretoonprim",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Azuretoonprim')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline8')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource"
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "String"
										},
										"sink": {
											"name": "ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Names",
											"type": "String"
										},
										"sink": {
											"name": "Names",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DestinationASql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "onprimis",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DestinationASql')]",
				"[concat(variables('factoryId'), '/datasets/onprimis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline9')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "DATA",
								"value": "1"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT TOP 1 Names FROM [dbo].[BlobTest] NOLOCK"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set Variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Test",
							"value": {
								"value": "@activity('Lookup1').output",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"Test1": {
						"type": "string",
						"defaultValue": "1"
					}
				},
				"variables": {
					"Test": {
						"type": "String",
						"defaultValue": "1"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinelookupandforeach')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupCategories",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[dbo].[getProductCategory]"
							},
							"dataset": {
								"referenceName": "SqlServerTable",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupCategories').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CopyData",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderStoredProcedureName": "[[dbo].[getsales]",
											"storedProcedureParameters": {
												"productcategory": {
													"type": "String",
													"value": {
														"value": "@item().Category",
														"type": "Expression"
													}
												}
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSetting"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSetting",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "OrderDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "OrderDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "PurchaseOrderNumber",
														"type": "String"
													},
													"sink": {
														"name": "PurchaseOrderNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Amount",
														"type": "Decimal"
													},
													"sink": {
														"name": "Amount",
														"type": "Decimal"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "Category",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Lookupandforeachcategory",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "StoredProcedure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CopyData",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[updateproductdeails]",
										"storedProcedureParameters": {
											"duration": {
												"value": {
													"value": "@activity('CopyData').output.CopyDuration",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"productcategory": {
												"value": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SV_Sqlservers",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable')]",
				"[concat(variables('factoryId'), '/datasets/Category')]",
				"[concat(variables('factoryId'), '/datasets/Lookupandforeachcategory')]",
				"[concat(variables('factoryId'), '/linkedServices/SV_Sqlservers')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Emp.csv",
						"container": "filecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Inventory",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "varchar"
					},
					{
						"name": "Names",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[BlobTest]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Inventory')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Success",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "varchar"
					},
					{
						"name": "Names",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[BlobTest1]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Success')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "nvarchar"
					},
					{
						"name": "Names",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[BlobTest]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Success",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "dbo.lookup"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Success')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure_Conditions_split')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Inventory",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "dbo..CSVYEAR2008"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Inventory')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azuredata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Inventory",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Table",
						"type": "nvarchar"
					},
					{
						"name": "Year",
						"type": "nvarchar"
					},
					{
						"name": "Rcode",
						"type": "nvarchar"
					},
					{
						"name": "Demographic",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Est1",
						"type": "nvarchar"
					},
					{
						"name": "Est2",
						"type": "nvarchar"
					},
					{
						"name": "Est3",
						"type": "nvarchar"
					},
					{
						"name": "Est4",
						"type": "nvarchar"
					},
					{
						"name": "Est5",
						"type": "nvarchar"
					},
					{
						"name": "Est6",
						"type": "nvarchar"
					},
					{
						"name": "Est7",
						"type": "nvarchar"
					},
					{
						"name": "Est8",
						"type": "nvarchar"
					},
					{
						"name": "Est9",
						"type": "nvarchar"
					},
					{
						"name": "Est10",
						"type": "nvarchar"
					},
					{
						"name": "Est11",
						"type": "nvarchar"
					},
					{
						"name": "DQF1",
						"type": "nvarchar"
					},
					{
						"name": "DQF2",
						"type": "nvarchar"
					},
					{
						"name": "DQF3",
						"type": "nvarchar"
					},
					{
						"name": "DQF4",
						"type": "nvarchar"
					},
					{
						"name": "DQF5",
						"type": "nvarchar"
					},
					{
						"name": "DQF6",
						"type": "nvarchar"
					},
					{
						"name": "DQF7",
						"type": "nvarchar"
					},
					{
						"name": "DQF8",
						"type": "nvarchar"
					},
					{
						"name": "DQF9",
						"type": "nvarchar"
					},
					{
						"name": "DQF10",
						"type": "nvarchar"
					},
					{
						"name": "DQF11",
						"type": "nvarchar"
					},
					{
						"name": "RSE1",
						"type": "nvarchar"
					},
					{
						"name": "RSE2",
						"type": "nvarchar"
					},
					{
						"name": "RSE3",
						"type": "nvarchar"
					},
					{
						"name": "RSE4",
						"type": "nvarchar"
					},
					{
						"name": "RSE5",
						"type": "nvarchar"
					},
					{
						"name": "RSE6",
						"type": "nvarchar"
					},
					{
						"name": "RSE7",
						"type": "nvarchar"
					},
					{
						"name": "RSE8",
						"type": "nvarchar"
					},
					{
						"name": "RSE9",
						"type": "nvarchar"
					},
					{
						"name": "RSE10",
						"type": "nvarchar"
					},
					{
						"name": "RSE11",
						"type": "nvarchar"
					},
					{
						"name": "P1",
						"type": "nvarchar"
					},
					{
						"name": "P2",
						"type": "nvarchar"
					},
					{
						"name": "P3",
						"type": "nvarchar"
					},
					{
						"name": "P4",
						"type": "nvarchar"
					},
					{
						"name": "P5",
						"type": "nvarchar"
					},
					{
						"name": "P6",
						"type": "nvarchar"
					},
					{
						"name": "P7",
						"type": "nvarchar"
					},
					{
						"name": "P8",
						"type": "nvarchar"
					},
					{
						"name": "P9",
						"type": "nvarchar"
					},
					{
						"name": "P10",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[.HES2018-Table10]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Inventory')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSVData_After2015')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLink_DK",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "DBO.CSVData_After2015"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLink_DK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSVtoblob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase7",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "[[dbo].[BlobTest]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase7')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Categories')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SV_Sqlservers",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SV_Sqlservers')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Category')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Lookupandforeachcategory",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Lookupandforeachcategory')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Conditional')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Inventory",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Table",
						"type": "nvarchar"
					},
					{
						"name": "Year",
						"type": "nvarchar"
					},
					{
						"name": "Rcode",
						"type": "nvarchar"
					},
					{
						"name": "Demographic",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Est1",
						"type": "nvarchar"
					},
					{
						"name": "Est2",
						"type": "nvarchar"
					},
					{
						"name": "Est3",
						"type": "nvarchar"
					},
					{
						"name": "Est4",
						"type": "nvarchar"
					},
					{
						"name": "Est5",
						"type": "nvarchar"
					},
					{
						"name": "Est6",
						"type": "nvarchar"
					},
					{
						"name": "Est7",
						"type": "nvarchar"
					},
					{
						"name": "Est8",
						"type": "nvarchar"
					},
					{
						"name": "Est9",
						"type": "nvarchar"
					},
					{
						"name": "Est10",
						"type": "nvarchar"
					},
					{
						"name": "Est11",
						"type": "nvarchar"
					},
					{
						"name": "DQF1",
						"type": "nvarchar"
					},
					{
						"name": "DQF2",
						"type": "nvarchar"
					},
					{
						"name": "DQF3",
						"type": "nvarchar"
					},
					{
						"name": "DQF4",
						"type": "nvarchar"
					},
					{
						"name": "DQF5",
						"type": "nvarchar"
					},
					{
						"name": "DQF6",
						"type": "nvarchar"
					},
					{
						"name": "DQF7",
						"type": "nvarchar"
					},
					{
						"name": "DQF8",
						"type": "nvarchar"
					},
					{
						"name": "DQF9",
						"type": "nvarchar"
					},
					{
						"name": "DQF10",
						"type": "nvarchar"
					},
					{
						"name": "DQF11",
						"type": "nvarchar"
					},
					{
						"name": "RSE1",
						"type": "nvarchar"
					},
					{
						"name": "RSE2",
						"type": "nvarchar"
					},
					{
						"name": "RSE3",
						"type": "nvarchar"
					},
					{
						"name": "RSE4",
						"type": "nvarchar"
					},
					{
						"name": "RSE5",
						"type": "nvarchar"
					},
					{
						"name": "RSE6",
						"type": "nvarchar"
					},
					{
						"name": "RSE7",
						"type": "nvarchar"
					},
					{
						"name": "RSE8",
						"type": "nvarchar"
					},
					{
						"name": "RSE9",
						"type": "nvarchar"
					},
					{
						"name": "RSE10",
						"type": "nvarchar"
					},
					{
						"name": "RSE11",
						"type": "nvarchar"
					},
					{
						"name": "P1",
						"type": "nvarchar"
					},
					{
						"name": "P2",
						"type": "nvarchar"
					},
					{
						"name": "P3",
						"type": "nvarchar"
					},
					{
						"name": "P4",
						"type": "nvarchar"
					},
					{
						"name": "P5",
						"type": "nvarchar"
					},
					{
						"name": "P6",
						"type": "nvarchar"
					},
					{
						"name": "P7",
						"type": "nvarchar"
					},
					{
						"name": "P8",
						"type": "nvarchar"
					},
					{
						"name": "P9",
						"type": "nvarchar"
					},
					{
						"name": "P10",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[.HES2018-Table10]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Inventory')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalDatayear')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage5",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "adfstagedcopytempdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Table",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Rcode",
						"type": "String"
					},
					{
						"name": "Demographic",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Est1",
						"type": "String"
					},
					{
						"name": "Est2",
						"type": "String"
					},
					{
						"name": "Est3",
						"type": "String"
					},
					{
						"name": "Est4",
						"type": "String"
					},
					{
						"name": "Est5",
						"type": "String"
					},
					{
						"name": "Est6",
						"type": "String"
					},
					{
						"name": "Est7",
						"type": "String"
					},
					{
						"name": "Est8",
						"type": "String"
					},
					{
						"name": "Est9",
						"type": "String"
					},
					{
						"name": "Est10",
						"type": "String"
					},
					{
						"name": "Est11",
						"type": "String"
					},
					{
						"name": "DQF1",
						"type": "String"
					},
					{
						"name": "DQF2",
						"type": "String"
					},
					{
						"name": "DQF3",
						"type": "String"
					},
					{
						"name": "DQF4",
						"type": "String"
					},
					{
						"name": "DQF5",
						"type": "String"
					},
					{
						"name": "DQF6",
						"type": "String"
					},
					{
						"name": "DQF7",
						"type": "String"
					},
					{
						"name": "DQF8",
						"type": "String"
					},
					{
						"name": "DQF9",
						"type": "String"
					},
					{
						"name": "DQF10",
						"type": "String"
					},
					{
						"name": "DQF11",
						"type": "String"
					},
					{
						"name": "RSE1",
						"type": "String"
					},
					{
						"name": "RSE2",
						"type": "String"
					},
					{
						"name": "RSE3",
						"type": "String"
					},
					{
						"name": "RSE4",
						"type": "String"
					},
					{
						"name": "RSE5",
						"type": "String"
					},
					{
						"name": "RSE6",
						"type": "String"
					},
					{
						"name": "RSE7",
						"type": "String"
					},
					{
						"name": "RSE8",
						"type": "String"
					},
					{
						"name": "RSE9",
						"type": "String"
					},
					{
						"name": "RSE10",
						"type": "String"
					},
					{
						"name": "RSE11",
						"type": "String"
					},
					{
						"name": "P1",
						"type": "String"
					},
					{
						"name": "P2",
						"type": "String"
					},
					{
						"name": "P3",
						"type": "String"
					},
					{
						"name": "P4",
						"type": "String"
					},
					{
						"name": "P5",
						"type": "String"
					},
					{
						"name": "P6",
						"type": "String"
					},
					{
						"name": "P7",
						"type": "String"
					},
					{
						"name": "P8",
						"type": "String"
					},
					{
						"name": "P9",
						"type": "String"
					},
					{
						"name": "P10",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalSpilt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Inventory1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Table",
						"type": "nvarchar"
					},
					{
						"name": "Year",
						"type": "nvarchar"
					},
					{
						"name": "Rcode",
						"type": "nvarchar"
					},
					{
						"name": "Demographic",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Est1",
						"type": "nvarchar"
					},
					{
						"name": "Est2",
						"type": "nvarchar"
					},
					{
						"name": "Est3",
						"type": "nvarchar"
					},
					{
						"name": "Est4",
						"type": "nvarchar"
					},
					{
						"name": "Est5",
						"type": "nvarchar"
					},
					{
						"name": "Est6",
						"type": "nvarchar"
					},
					{
						"name": "Est7",
						"type": "nvarchar"
					},
					{
						"name": "Est8",
						"type": "nvarchar"
					},
					{
						"name": "Est9",
						"type": "nvarchar"
					},
					{
						"name": "Est10",
						"type": "nvarchar"
					},
					{
						"name": "Est11",
						"type": "nvarchar"
					},
					{
						"name": "DQF1",
						"type": "nvarchar"
					},
					{
						"name": "DQF2",
						"type": "nvarchar"
					},
					{
						"name": "DQF3",
						"type": "nvarchar"
					},
					{
						"name": "DQF4",
						"type": "nvarchar"
					},
					{
						"name": "DQF5",
						"type": "nvarchar"
					},
					{
						"name": "DQF6",
						"type": "nvarchar"
					},
					{
						"name": "DQF7",
						"type": "nvarchar"
					},
					{
						"name": "DQF8",
						"type": "nvarchar"
					},
					{
						"name": "DQF9",
						"type": "nvarchar"
					},
					{
						"name": "DQF10",
						"type": "nvarchar"
					},
					{
						"name": "DQF11",
						"type": "nvarchar"
					},
					{
						"name": "RSE1",
						"type": "nvarchar"
					},
					{
						"name": "RSE2",
						"type": "nvarchar"
					},
					{
						"name": "RSE3",
						"type": "nvarchar"
					},
					{
						"name": "RSE4",
						"type": "nvarchar"
					},
					{
						"name": "RSE5",
						"type": "nvarchar"
					},
					{
						"name": "RSE6",
						"type": "nvarchar"
					},
					{
						"name": "RSE7",
						"type": "nvarchar"
					},
					{
						"name": "RSE8",
						"type": "nvarchar"
					},
					{
						"name": "RSE9",
						"type": "nvarchar"
					},
					{
						"name": "RSE10",
						"type": "nvarchar"
					},
					{
						"name": "RSE11",
						"type": "nvarchar"
					},
					{
						"name": "P1",
						"type": "nvarchar"
					},
					{
						"name": "P2",
						"type": "nvarchar"
					},
					{
						"name": "P3",
						"type": "nvarchar"
					},
					{
						"name": "P4",
						"type": "nvarchar"
					},
					{
						"name": "P5",
						"type": "nvarchar"
					},
					{
						"name": "P6",
						"type": "nvarchar"
					},
					{
						"name": "P7",
						"type": "nvarchar"
					},
					{
						"name": "P8",
						"type": "nvarchar"
					},
					{
						"name": "P9",
						"type": "nvarchar"
					},
					{
						"name": "P10",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[.HES2018-Table10]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Inventory1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Conditionalhihgdata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage6",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "adfstagedcopytempdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Table",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Rcode",
						"type": "String"
					},
					{
						"name": "Demographic",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Est1",
						"type": "String"
					},
					{
						"name": "Est2",
						"type": "String"
					},
					{
						"name": "Est3",
						"type": "String"
					},
					{
						"name": "Est4",
						"type": "String"
					},
					{
						"name": "Est5",
						"type": "String"
					},
					{
						"name": "Est6",
						"type": "String"
					},
					{
						"name": "Est7",
						"type": "String"
					},
					{
						"name": "Est8",
						"type": "String"
					},
					{
						"name": "Est9",
						"type": "String"
					},
					{
						"name": "Est10",
						"type": "String"
					},
					{
						"name": "Est11",
						"type": "String"
					},
					{
						"name": "DQF1",
						"type": "String"
					},
					{
						"name": "DQF2",
						"type": "String"
					},
					{
						"name": "DQF3",
						"type": "String"
					},
					{
						"name": "DQF4",
						"type": "String"
					},
					{
						"name": "DQF5",
						"type": "String"
					},
					{
						"name": "DQF6",
						"type": "String"
					},
					{
						"name": "DQF7",
						"type": "String"
					},
					{
						"name": "DQF8",
						"type": "String"
					},
					{
						"name": "DQF9",
						"type": "String"
					},
					{
						"name": "DQF10",
						"type": "String"
					},
					{
						"name": "DQF11",
						"type": "String"
					},
					{
						"name": "RSE1",
						"type": "String"
					},
					{
						"name": "RSE2",
						"type": "String"
					},
					{
						"name": "RSE3",
						"type": "String"
					},
					{
						"name": "RSE4",
						"type": "String"
					},
					{
						"name": "RSE5",
						"type": "String"
					},
					{
						"name": "RSE6",
						"type": "String"
					},
					{
						"name": "RSE7",
						"type": "String"
					},
					{
						"name": "RSE8",
						"type": "String"
					},
					{
						"name": "RSE9",
						"type": "String"
					},
					{
						"name": "RSE10",
						"type": "String"
					},
					{
						"name": "RSE11",
						"type": "String"
					},
					{
						"name": "P1",
						"type": "String"
					},
					{
						"name": "P2",
						"type": "String"
					},
					{
						"name": "P3",
						"type": "String"
					},
					{
						"name": "P4",
						"type": "String"
					},
					{
						"name": "P5",
						"type": "String"
					},
					{
						"name": "P6",
						"type": "String"
					},
					{
						"name": "P7",
						"type": "String"
					},
					{
						"name": "P8",
						"type": "String"
					},
					{
						"name": "P9",
						"type": "String"
					},
					{
						"name": "P10",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage6')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "dbo.json"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataBefore2015')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLink_DK",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "DBO.CSVData_Before2015"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLink_DK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Incremental_Load",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Incremental_Load')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Sample.csv",
						"container": "filecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Sample.csv",
						"container": "filecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "B050819",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "filecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/B050819')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage7",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "part-00000-tid-5272544864776010210-03850827-0ab2-4922-8947-2a3383c45013-0-c000.csv",
						"container": "filecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "Names",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage7')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText_DK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CSVtoSQLAzure_DK",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "HES2018-Table10.csv",
						"container": "csvtosql"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Table",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Rcode",
						"type": "String"
					},
					{
						"name": "Demographic",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Est1",
						"type": "String"
					},
					{
						"name": "Est2",
						"type": "String"
					},
					{
						"name": "Est3",
						"type": "String"
					},
					{
						"name": "Est4",
						"type": "String"
					},
					{
						"name": "Est5",
						"type": "String"
					},
					{
						"name": "Est6",
						"type": "String"
					},
					{
						"name": "Est7",
						"type": "String"
					},
					{
						"name": "Est8",
						"type": "String"
					},
					{
						"name": "Est9",
						"type": "String"
					},
					{
						"name": "Est10",
						"type": "String"
					},
					{
						"name": "Est11",
						"type": "String"
					},
					{
						"name": "DQF1",
						"type": "String"
					},
					{
						"name": "DQF2",
						"type": "String"
					},
					{
						"name": "DQF3",
						"type": "String"
					},
					{
						"name": "DQF4",
						"type": "String"
					},
					{
						"name": "DQF5",
						"type": "String"
					},
					{
						"name": "DQF6",
						"type": "String"
					},
					{
						"name": "DQF7",
						"type": "String"
					},
					{
						"name": "DQF8",
						"type": "String"
					},
					{
						"name": "DQF9",
						"type": "String"
					},
					{
						"name": "DQF10",
						"type": "String"
					},
					{
						"name": "DQF11",
						"type": "String"
					},
					{
						"name": "RSE1",
						"type": "String"
					},
					{
						"name": "RSE2",
						"type": "String"
					},
					{
						"name": "RSE3",
						"type": "String"
					},
					{
						"name": "RSE4",
						"type": "String"
					},
					{
						"name": "RSE5",
						"type": "String"
					},
					{
						"name": "RSE6",
						"type": "String"
					},
					{
						"name": "RSE7",
						"type": "String"
					},
					{
						"name": "RSE8",
						"type": "String"
					},
					{
						"name": "RSE9",
						"type": "String"
					},
					{
						"name": "RSE10",
						"type": "String"
					},
					{
						"name": "RSE11",
						"type": "String"
					},
					{
						"name": "P1",
						"type": "String"
					},
					{
						"name": "P2",
						"type": "String"
					},
					{
						"name": "P3",
						"type": "String"
					},
					{
						"name": "P4",
						"type": "String"
					},
					{
						"name": "P5",
						"type": "String"
					},
					{
						"name": "P6",
						"type": "String"
					},
					{
						"name": "P7",
						"type": "String"
					},
					{
						"name": "P8",
						"type": "String"
					},
					{
						"name": "P9",
						"type": "String"
					},
					{
						"name": "P10",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CSVtoSQLAzure_DK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationASql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Inventory",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "nvarchar"
					},
					{
						"name": "Names",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[BlobTest]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Inventory')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_3kp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "ID",
						"type": "Int32",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Names",
						"type": "String",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[samples]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_j35')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer_new",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "ID",
						"type": "Int32",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "Names",
						"type": "String",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Test]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer_new')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_nuz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase5",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "BusinessEntityID",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "NationalIDNumber",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LoginID",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "OrganizationNode",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "OrganizationLevel",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "JobTitle",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SickLeaveHours",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CurrentFlag",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "rowguid",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ModifiedDate",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "BirthDate",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MaritalStatus",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Gender",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "HireDate",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SalariedFlag",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "VacationHours",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Sample_Test_DK]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_qb4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLink_DK",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "BusinessEntityID",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "NationalIDNumber",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "LoginID",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "OrganizationNode",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "OrganizationLevel",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "JobTitle",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SickLeaveHours",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CurrentFlag",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "rowguid",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ModifiedDate",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "BirthDate",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "MaritalStatus",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "Gender",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "HireDate",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "SalariedFlag",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "VacationHours",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Sample_Test_DK]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLink_DK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_tmr')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "pname",
						"type": "String",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "age",
						"type": "Int32",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "salary",
						"type": "Int32",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "companyname",
						"type": "String",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "pid",
						"type": "Int32",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "gender",
						"type": "String",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[persons]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimEmp1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Inventory",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmpID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "surrogatekey",
						"type": "nvarchar"
					},
					{
						"name": "Region",
						"type": "nvarchar"
					},
					{
						"name": "Status",
						"type": "nvarchar"
					},
					{
						"name": "EmpFunction",
						"type": "nvarchar"
					},
					{
						"name": "Level",
						"type": "nvarchar"
					},
					{
						"name": "Role",
						"type": "nvarchar"
					},
					{
						"name": "StartDate",
						"type": "date"
					},
					{
						"name": "EndDate",
						"type": "date"
					},
					{
						"name": "iscurrent",
						"type": "int",
						"precision": 10
					},
					{
						"name": "processtime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[DimEmp]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Inventory')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EmployeeFiles1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EMP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Emp.csv",
						"container": "filecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EmpID",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "Function",
						"type": "String"
					},
					{
						"name": "Level",
						"type": "String"
					},
					{
						"name": "Role",
						"type": "String"
					},
					{
						"name": "StartDate",
						"type": "String"
					},
					{
						"name": "EndDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EMP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Test.json.txt",
						"container": "encore"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Prop_0",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lookupandforeachcategory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Cateorydata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "adfstagedcopytempdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Table",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Rcode",
						"type": "String"
					},
					{
						"name": "Demographic",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Est1",
						"type": "String"
					},
					{
						"name": "Est2",
						"type": "String"
					},
					{
						"name": "Est3",
						"type": "String"
					},
					{
						"name": "Est4",
						"type": "String"
					},
					{
						"name": "Est5",
						"type": "String"
					},
					{
						"name": "Est6",
						"type": "String"
					},
					{
						"name": "Est7",
						"type": "String"
					},
					{
						"name": "Est8",
						"type": "String"
					},
					{
						"name": "Est9",
						"type": "String"
					},
					{
						"name": "Est10",
						"type": "String"
					},
					{
						"name": "Est11",
						"type": "String"
					},
					{
						"name": "DQF1",
						"type": "String"
					},
					{
						"name": "DQF2",
						"type": "String"
					},
					{
						"name": "DQF3",
						"type": "String"
					},
					{
						"name": "DQF4",
						"type": "String"
					},
					{
						"name": "DQF5",
						"type": "String"
					},
					{
						"name": "DQF6",
						"type": "String"
					},
					{
						"name": "DQF7",
						"type": "String"
					},
					{
						"name": "DQF8",
						"type": "String"
					},
					{
						"name": "DQF9",
						"type": "String"
					},
					{
						"name": "DQF10",
						"type": "String"
					},
					{
						"name": "DQF11",
						"type": "String"
					},
					{
						"name": "RSE1",
						"type": "String"
					},
					{
						"name": "RSE2",
						"type": "String"
					},
					{
						"name": "RSE3",
						"type": "String"
					},
					{
						"name": "RSE4",
						"type": "String"
					},
					{
						"name": "RSE5",
						"type": "String"
					},
					{
						"name": "RSE6",
						"type": "String"
					},
					{
						"name": "RSE7",
						"type": "String"
					},
					{
						"name": "RSE8",
						"type": "String"
					},
					{
						"name": "RSE9",
						"type": "String"
					},
					{
						"name": "RSE10",
						"type": "String"
					},
					{
						"name": "RSE11",
						"type": "String"
					},
					{
						"name": "P1",
						"type": "String"
					},
					{
						"name": "P2",
						"type": "String"
					},
					{
						"name": "P3",
						"type": "String"
					},
					{
						"name": "P4",
						"type": "String"
					},
					{
						"name": "P5",
						"type": "String"
					},
					{
						"name": "P6",
						"type": "String"
					},
					{
						"name": "P7",
						"type": "String"
					},
					{
						"name": "P8",
						"type": "String"
					},
					{
						"name": "P9",
						"type": "String"
					},
					{
						"name": "P10",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Cateorydata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SP_output_lookup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer4",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "pname",
						"type": "varchar"
					},
					{
						"name": "age",
						"type": "int",
						"precision": 10
					},
					{
						"name": "salary",
						"type": "int",
						"precision": 10
					},
					{
						"name": "companyname",
						"type": "varchar"
					},
					{
						"name": "pid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "gender",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[persons]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLASQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "varchar"
					},
					{
						"name": "Names",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[BlobTest1]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SV_AzureSqlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Inventory",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "dbo..HES2018-Table10"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Inventory')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SV_DelimitedText')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SVAzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "HES2018-Table10.csv",
						"container": "csvtosql"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Table",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Rcode",
						"type": "String"
					},
					{
						"name": "Demographic",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Est1",
						"type": "String"
					},
					{
						"name": "Est2",
						"type": "String"
					},
					{
						"name": "Est3",
						"type": "String"
					},
					{
						"name": "Est4",
						"type": "String"
					},
					{
						"name": "Est5",
						"type": "String"
					},
					{
						"name": "Est6",
						"type": "String"
					},
					{
						"name": "Est7",
						"type": "String"
					},
					{
						"name": "Est8",
						"type": "String"
					},
					{
						"name": "Est9",
						"type": "String"
					},
					{
						"name": "Est10",
						"type": "String"
					},
					{
						"name": "Est11",
						"type": "String"
					},
					{
						"name": "DQF1",
						"type": "String"
					},
					{
						"name": "DQF2",
						"type": "String"
					},
					{
						"name": "DQF3",
						"type": "String"
					},
					{
						"name": "DQF4",
						"type": "String"
					},
					{
						"name": "DQF5",
						"type": "String"
					},
					{
						"name": "DQF6",
						"type": "String"
					},
					{
						"name": "DQF7",
						"type": "String"
					},
					{
						"name": "DQF8",
						"type": "String"
					},
					{
						"name": "DQF9",
						"type": "String"
					},
					{
						"name": "DQF10",
						"type": "String"
					},
					{
						"name": "DQF11",
						"type": "String"
					},
					{
						"name": "RSE1",
						"type": "String"
					},
					{
						"name": "RSE2",
						"type": "String"
					},
					{
						"name": "RSE3",
						"type": "String"
					},
					{
						"name": "RSE4",
						"type": "String"
					},
					{
						"name": "RSE5",
						"type": "String"
					},
					{
						"name": "RSE6",
						"type": "String"
					},
					{
						"name": "RSE7",
						"type": "String"
					},
					{
						"name": "RSE8",
						"type": "String"
					},
					{
						"name": "RSE9",
						"type": "String"
					},
					{
						"name": "RSE10",
						"type": "String"
					},
					{
						"name": "RSE11",
						"type": "String"
					},
					{
						"name": "P1",
						"type": "String"
					},
					{
						"name": "P2",
						"type": "String"
					},
					{
						"name": "P3",
						"type": "String"
					},
					{
						"name": "P4",
						"type": "String"
					},
					{
						"name": "P5",
						"type": "String"
					},
					{
						"name": "P6",
						"type": "String"
					},
					{
						"name": "P7",
						"type": "String"
					},
					{
						"name": "P8",
						"type": "String"
					},
					{
						"name": "P9",
						"type": "String"
					},
					{
						"name": "P10",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SVAzureBlobStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SV_SqlServerTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Saratest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServeronprem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"tableName": "[[dbo].[InvWarhouseMaster]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServeronprem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_3kp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Prop_0",
						"type": "String"
					},
					{
						"name": "Prop_1",
						"type": "String"
					}
				],
				"typeProperties": {
					"fileName": "[parameters('SourceDataset_3kp_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('SourceDataset_3kp_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_j35')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer_new",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "ID",
						"type": "Int32"
					},
					{
						"name": "Names",
						"type": "String"
					}
				],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer_new')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_nuz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SV_Sqlservers",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "BusinessEntityID",
						"type": "Int32"
					},
					{
						"name": "NationalIDNumber",
						"type": "String"
					},
					{
						"name": "LoginID",
						"type": "String"
					},
					{
						"name": "OrganizationNode"
					},
					{
						"name": "OrganizationLevel",
						"type": "Int16"
					},
					{
						"name": "JobTitle",
						"type": "String"
					},
					{
						"name": "BirthDate",
						"type": "Date"
					},
					{
						"name": "MaritalStatus",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "HireDate",
						"type": "Date"
					},
					{
						"name": "SalariedFlag",
						"type": "Boolean"
					},
					{
						"name": "VacationHours",
						"type": "Int16"
					},
					{
						"name": "SickLeaveHours",
						"type": "Int16"
					},
					{
						"name": "CurrentFlag",
						"type": "Boolean"
					},
					{
						"name": "rowguid",
						"type": "Guid"
					},
					{
						"name": "ModifiedDate",
						"type": "DateTime"
					}
				],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SV_Sqlservers')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_qb4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dinesh_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "BusinessEntityID",
						"type": "String"
					},
					{
						"name": "NationalIDNumber",
						"type": "String"
					},
					{
						"name": "LoginID",
						"type": "String"
					},
					{
						"name": "OrganizationNode",
						"type": "String"
					},
					{
						"name": "OrganizationLevel",
						"type": "String"
					},
					{
						"name": "JobTitle",
						"type": "String"
					},
					{
						"name": "BirthDate",
						"type": "String"
					},
					{
						"name": "MaritalStatus",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "HireDate",
						"type": "String"
					},
					{
						"name": "SalariedFlag",
						"type": "String"
					},
					{
						"name": "VacationHours",
						"type": "String"
					},
					{
						"name": "SickLeaveHours",
						"type": "String"
					},
					{
						"name": "CurrentFlag",
						"type": "String"
					},
					{
						"name": "rowguid",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "String"
					}
				],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Dinesh_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_tmr')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "pname",
						"type": "String"
					},
					{
						"name": "age",
						"type": "Int32"
					},
					{
						"name": "salary",
						"type": "Int32"
					},
					{
						"name": "companyname",
						"type": "String"
					},
					{
						"name": "pid",
						"type": "Int32"
					},
					{
						"name": "gender",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[persons]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Year2009')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "YEarData",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "csvtosql"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Table",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Rcode",
						"type": "String"
					},
					{
						"name": "Demographic",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Est1",
						"type": "String"
					},
					{
						"name": "Est2",
						"type": "String"
					},
					{
						"name": "Est3",
						"type": "String"
					},
					{
						"name": "Est4",
						"type": "String"
					},
					{
						"name": "Est5",
						"type": "String"
					},
					{
						"name": "Est6",
						"type": "String"
					},
					{
						"name": "Est7",
						"type": "String"
					},
					{
						"name": "Est8",
						"type": "String"
					},
					{
						"name": "Est9",
						"type": "String"
					},
					{
						"name": "Est10",
						"type": "String"
					},
					{
						"name": "Est11",
						"type": "String"
					},
					{
						"name": "DQF1",
						"type": "String"
					},
					{
						"name": "DQF2",
						"type": "String"
					},
					{
						"name": "DQF3",
						"type": "String"
					},
					{
						"name": "DQF4",
						"type": "String"
					},
					{
						"name": "DQF5",
						"type": "String"
					},
					{
						"name": "DQF6",
						"type": "String"
					},
					{
						"name": "DQF7",
						"type": "String"
					},
					{
						"name": "DQF8",
						"type": "String"
					},
					{
						"name": "DQF9",
						"type": "String"
					},
					{
						"name": "DQF10",
						"type": "String"
					},
					{
						"name": "DQF11",
						"type": "String"
					},
					{
						"name": "RSE1",
						"type": "String"
					},
					{
						"name": "RSE2",
						"type": "String"
					},
					{
						"name": "RSE3",
						"type": "String"
					},
					{
						"name": "RSE4",
						"type": "String"
					},
					{
						"name": "RSE5",
						"type": "String"
					},
					{
						"name": "RSE6",
						"type": "String"
					},
					{
						"name": "RSE7",
						"type": "String"
					},
					{
						"name": "RSE8",
						"type": "String"
					},
					{
						"name": "RSE9",
						"type": "String"
					},
					{
						"name": "RSE10",
						"type": "String"
					},
					{
						"name": "RSE11",
						"type": "String"
					},
					{
						"name": "P1",
						"type": "String"
					},
					{
						"name": "P2",
						"type": "String"
					},
					{
						"name": "P3",
						"type": "String"
					},
					{
						"name": "P4",
						"type": "String"
					},
					{
						"name": "P5",
						"type": "String"
					},
					{
						"name": "P6",
						"type": "String"
					},
					{
						"name": "P7",
						"type": "String"
					},
					{
						"name": "P8",
						"type": "String"
					},
					{
						"name": "P9",
						"type": "String"
					},
					{
						"name": "P10",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/YEarData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Year2010')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "YEarData",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "csvtosql"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Table",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Rcode",
						"type": "String"
					},
					{
						"name": "Demographic",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Est1",
						"type": "String"
					},
					{
						"name": "Est2",
						"type": "String"
					},
					{
						"name": "Est3",
						"type": "String"
					},
					{
						"name": "Est4",
						"type": "String"
					},
					{
						"name": "Est5",
						"type": "String"
					},
					{
						"name": "Est6",
						"type": "String"
					},
					{
						"name": "Est7",
						"type": "String"
					},
					{
						"name": "Est8",
						"type": "String"
					},
					{
						"name": "Est9",
						"type": "String"
					},
					{
						"name": "Est10",
						"type": "String"
					},
					{
						"name": "Est11",
						"type": "String"
					},
					{
						"name": "DQF1",
						"type": "String"
					},
					{
						"name": "DQF2",
						"type": "String"
					},
					{
						"name": "DQF3",
						"type": "String"
					},
					{
						"name": "DQF4",
						"type": "String"
					},
					{
						"name": "DQF5",
						"type": "String"
					},
					{
						"name": "DQF6",
						"type": "String"
					},
					{
						"name": "DQF7",
						"type": "String"
					},
					{
						"name": "DQF8",
						"type": "String"
					},
					{
						"name": "DQF9",
						"type": "String"
					},
					{
						"name": "DQF10",
						"type": "String"
					},
					{
						"name": "DQF11",
						"type": "String"
					},
					{
						"name": "RSE1",
						"type": "String"
					},
					{
						"name": "RSE2",
						"type": "String"
					},
					{
						"name": "RSE3",
						"type": "String"
					},
					{
						"name": "RSE4",
						"type": "String"
					},
					{
						"name": "RSE5",
						"type": "String"
					},
					{
						"name": "RSE6",
						"type": "String"
					},
					{
						"name": "RSE7",
						"type": "String"
					},
					{
						"name": "RSE8",
						"type": "String"
					},
					{
						"name": "RSE9",
						"type": "String"
					},
					{
						"name": "RSE10",
						"type": "String"
					},
					{
						"name": "RSE11",
						"type": "String"
					},
					{
						"name": "P1",
						"type": "String"
					},
					{
						"name": "P2",
						"type": "String"
					},
					{
						"name": "P3",
						"type": "String"
					},
					{
						"name": "P4",
						"type": "String"
					},
					{
						"name": "P5",
						"type": "String"
					},
					{
						"name": "P6",
						"type": "String"
					},
					{
						"name": "P7",
						"type": "String"
					},
					{
						"name": "P8",
						"type": "String"
					},
					{
						"name": "P9",
						"type": "String"
					},
					{
						"name": "P10",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/YEarData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Year2012')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "YEarData",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "csvtosql"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Table",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Rcode",
						"type": "String"
					},
					{
						"name": "Demographic",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Est1",
						"type": "String"
					},
					{
						"name": "Est2",
						"type": "String"
					},
					{
						"name": "Est3",
						"type": "String"
					},
					{
						"name": "Est4",
						"type": "String"
					},
					{
						"name": "Est5",
						"type": "String"
					},
					{
						"name": "Est6",
						"type": "String"
					},
					{
						"name": "Est7",
						"type": "String"
					},
					{
						"name": "Est8",
						"type": "String"
					},
					{
						"name": "Est9",
						"type": "String"
					},
					{
						"name": "Est10",
						"type": "String"
					},
					{
						"name": "Est11",
						"type": "String"
					},
					{
						"name": "DQF1",
						"type": "String"
					},
					{
						"name": "DQF2",
						"type": "String"
					},
					{
						"name": "DQF3",
						"type": "String"
					},
					{
						"name": "DQF4",
						"type": "String"
					},
					{
						"name": "DQF5",
						"type": "String"
					},
					{
						"name": "DQF6",
						"type": "String"
					},
					{
						"name": "DQF7",
						"type": "String"
					},
					{
						"name": "DQF8",
						"type": "String"
					},
					{
						"name": "DQF9",
						"type": "String"
					},
					{
						"name": "DQF10",
						"type": "String"
					},
					{
						"name": "DQF11",
						"type": "String"
					},
					{
						"name": "RSE1",
						"type": "String"
					},
					{
						"name": "RSE2",
						"type": "String"
					},
					{
						"name": "RSE3",
						"type": "String"
					},
					{
						"name": "RSE4",
						"type": "String"
					},
					{
						"name": "RSE5",
						"type": "String"
					},
					{
						"name": "RSE6",
						"type": "String"
					},
					{
						"name": "RSE7",
						"type": "String"
					},
					{
						"name": "RSE8",
						"type": "String"
					},
					{
						"name": "RSE9",
						"type": "String"
					},
					{
						"name": "RSE10",
						"type": "String"
					},
					{
						"name": "RSE11",
						"type": "String"
					},
					{
						"name": "P1",
						"type": "String"
					},
					{
						"name": "P2",
						"type": "String"
					},
					{
						"name": "P3",
						"type": "String"
					},
					{
						"name": "P4",
						"type": "String"
					},
					{
						"name": "P5",
						"type": "String"
					},
					{
						"name": "P6",
						"type": "String"
					},
					{
						"name": "P7",
						"type": "String"
					},
					{
						"name": "P8",
						"type": "String"
					},
					{
						"name": "P9",
						"type": "String"
					},
					{
						"name": "P10",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/YEarData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Yeardata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "YEarData",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "csvtosql"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Table",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Rcode",
						"type": "String"
					},
					{
						"name": "Demographic",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Est1",
						"type": "String"
					},
					{
						"name": "Est2",
						"type": "String"
					},
					{
						"name": "Est3",
						"type": "String"
					},
					{
						"name": "Est4",
						"type": "String"
					},
					{
						"name": "Est5",
						"type": "String"
					},
					{
						"name": "Est6",
						"type": "String"
					},
					{
						"name": "Est7",
						"type": "String"
					},
					{
						"name": "Est8",
						"type": "String"
					},
					{
						"name": "Est9",
						"type": "String"
					},
					{
						"name": "Est10",
						"type": "String"
					},
					{
						"name": "Est11",
						"type": "String"
					},
					{
						"name": "DQF1",
						"type": "String"
					},
					{
						"name": "DQF2",
						"type": "String"
					},
					{
						"name": "DQF3",
						"type": "String"
					},
					{
						"name": "DQF4",
						"type": "String"
					},
					{
						"name": "DQF5",
						"type": "String"
					},
					{
						"name": "DQF6",
						"type": "String"
					},
					{
						"name": "DQF7",
						"type": "String"
					},
					{
						"name": "DQF8",
						"type": "String"
					},
					{
						"name": "DQF9",
						"type": "String"
					},
					{
						"name": "DQF10",
						"type": "String"
					},
					{
						"name": "DQF11",
						"type": "String"
					},
					{
						"name": "RSE1",
						"type": "String"
					},
					{
						"name": "RSE2",
						"type": "String"
					},
					{
						"name": "RSE3",
						"type": "String"
					},
					{
						"name": "RSE4",
						"type": "String"
					},
					{
						"name": "RSE5",
						"type": "String"
					},
					{
						"name": "RSE6",
						"type": "String"
					},
					{
						"name": "RSE7",
						"type": "String"
					},
					{
						"name": "RSE8",
						"type": "String"
					},
					{
						"name": "RSE9",
						"type": "String"
					},
					{
						"name": "RSE10",
						"type": "String"
					},
					{
						"name": "RSE11",
						"type": "String"
					},
					{
						"name": "P1",
						"type": "String"
					},
					{
						"name": "P2",
						"type": "String"
					},
					{
						"name": "P3",
						"type": "String"
					},
					{
						"name": "P4",
						"type": "String"
					},
					{
						"name": "P5",
						"type": "String"
					},
					{
						"name": "P6",
						"type": "String"
					},
					{
						"name": "P7",
						"type": "String"
					},
					{
						"name": "P8",
						"type": "String"
					},
					{
						"name": "P9",
						"type": "String"
					},
					{
						"name": "P10",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/YEarData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Yeardata2008')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "YEarData",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "csvtosql"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Table",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Rcode",
						"type": "String"
					},
					{
						"name": "Demographic",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Est1",
						"type": "String"
					},
					{
						"name": "Est2",
						"type": "String"
					},
					{
						"name": "Est3",
						"type": "String"
					},
					{
						"name": "Est4",
						"type": "String"
					},
					{
						"name": "Est5",
						"type": "String"
					},
					{
						"name": "Est6",
						"type": "String"
					},
					{
						"name": "Est7",
						"type": "String"
					},
					{
						"name": "Est8",
						"type": "String"
					},
					{
						"name": "Est9",
						"type": "String"
					},
					{
						"name": "Est10",
						"type": "String"
					},
					{
						"name": "Est11",
						"type": "String"
					},
					{
						"name": "DQF1",
						"type": "String"
					},
					{
						"name": "DQF2",
						"type": "String"
					},
					{
						"name": "DQF3",
						"type": "String"
					},
					{
						"name": "DQF4",
						"type": "String"
					},
					{
						"name": "DQF5",
						"type": "String"
					},
					{
						"name": "DQF6",
						"type": "String"
					},
					{
						"name": "DQF7",
						"type": "String"
					},
					{
						"name": "DQF8",
						"type": "String"
					},
					{
						"name": "DQF9",
						"type": "String"
					},
					{
						"name": "DQF10",
						"type": "String"
					},
					{
						"name": "DQF11",
						"type": "String"
					},
					{
						"name": "RSE1",
						"type": "String"
					},
					{
						"name": "RSE2",
						"type": "String"
					},
					{
						"name": "RSE3",
						"type": "String"
					},
					{
						"name": "RSE4",
						"type": "String"
					},
					{
						"name": "RSE5",
						"type": "String"
					},
					{
						"name": "RSE6",
						"type": "String"
					},
					{
						"name": "RSE7",
						"type": "String"
					},
					{
						"name": "RSE8",
						"type": "String"
					},
					{
						"name": "RSE9",
						"type": "String"
					},
					{
						"name": "RSE10",
						"type": "String"
					},
					{
						"name": "RSE11",
						"type": "String"
					},
					{
						"name": "P1",
						"type": "String"
					},
					{
						"name": "P2",
						"type": "String"
					},
					{
						"name": "P3",
						"type": "String"
					},
					{
						"name": "P4",
						"type": "String"
					},
					{
						"name": "P5",
						"type": "String"
					},
					{
						"name": "P6",
						"type": "String"
					},
					{
						"name": "P7",
						"type": "String"
					},
					{
						"name": "P8",
						"type": "String"
					},
					{
						"name": "P9",
						"type": "String"
					},
					{
						"name": "P10",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/YEarData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lookup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Success",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "dbo.lookup"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Success')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onprimis')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID",
						"type": "varchar"
					},
					{
						"name": "Names",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[BlobTest]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onprimlink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ContactTypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"tableName": "[[Person].[ContactType]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sivaji')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Table",
						"type": "nvarchar"
					},
					{
						"name": "Year",
						"type": "nvarchar"
					},
					{
						"name": "Rcode",
						"type": "nvarchar"
					},
					{
						"name": "Demographic",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Est1",
						"type": "nvarchar"
					},
					{
						"name": "Est2",
						"type": "nvarchar"
					},
					{
						"name": "Est3",
						"type": "nvarchar"
					},
					{
						"name": "Est4",
						"type": "nvarchar"
					},
					{
						"name": "Est5",
						"type": "nvarchar"
					},
					{
						"name": "Est6",
						"type": "nvarchar"
					},
					{
						"name": "Est7",
						"type": "nvarchar"
					},
					{
						"name": "Est8",
						"type": "nvarchar"
					},
					{
						"name": "Est9",
						"type": "nvarchar"
					},
					{
						"name": "Est10",
						"type": "nvarchar"
					},
					{
						"name": "Est11",
						"type": "nvarchar"
					},
					{
						"name": "DQF1",
						"type": "nvarchar"
					},
					{
						"name": "DQF2",
						"type": "nvarchar"
					},
					{
						"name": "DQF3",
						"type": "nvarchar"
					},
					{
						"name": "DQF4",
						"type": "nvarchar"
					},
					{
						"name": "DQF5",
						"type": "nvarchar"
					},
					{
						"name": "DQF6",
						"type": "nvarchar"
					},
					{
						"name": "DQF7",
						"type": "nvarchar"
					},
					{
						"name": "DQF8",
						"type": "nvarchar"
					},
					{
						"name": "DQF9",
						"type": "nvarchar"
					},
					{
						"name": "DQF10",
						"type": "nvarchar"
					},
					{
						"name": "DQF11",
						"type": "nvarchar"
					},
					{
						"name": "RSE1",
						"type": "nvarchar"
					},
					{
						"name": "RSE2",
						"type": "nvarchar"
					},
					{
						"name": "RSE3",
						"type": "nvarchar"
					},
					{
						"name": "RSE4",
						"type": "nvarchar"
					},
					{
						"name": "RSE5",
						"type": "nvarchar"
					},
					{
						"name": "RSE6",
						"type": "nvarchar"
					},
					{
						"name": "RSE7",
						"type": "nvarchar"
					},
					{
						"name": "RSE8",
						"type": "nvarchar"
					},
					{
						"name": "RSE9",
						"type": "nvarchar"
					},
					{
						"name": "RSE10",
						"type": "nvarchar"
					},
					{
						"name": "RSE11",
						"type": "nvarchar"
					},
					{
						"name": "P1",
						"type": "nvarchar"
					},
					{
						"name": "P2",
						"type": "nvarchar"
					},
					{
						"name": "P3",
						"type": "nvarchar"
					},
					{
						"name": "P4",
						"type": "nvarchar"
					},
					{
						"name": "P5",
						"type": "nvarchar"
					},
					{
						"name": "P6",
						"type": "nvarchar"
					},
					{
						"name": "P7",
						"type": "nvarchar"
					},
					{
						"name": "P8",
						"type": "nvarchar"
					},
					{
						"name": "P9",
						"type": "nvarchar"
					},
					{
						"name": "P10",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[.HES2018-Table10]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sivaji2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Year2008",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Year2008')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/yearlow')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "YEarData",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "csvtosql"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Table",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Rcode",
						"type": "String"
					},
					{
						"name": "Demographic",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Est1",
						"type": "String"
					},
					{
						"name": "Est2",
						"type": "String"
					},
					{
						"name": "Est3",
						"type": "String"
					},
					{
						"name": "Est4",
						"type": "String"
					},
					{
						"name": "Est5",
						"type": "String"
					},
					{
						"name": "Est6",
						"type": "String"
					},
					{
						"name": "Est7",
						"type": "String"
					},
					{
						"name": "Est8",
						"type": "String"
					},
					{
						"name": "Est9",
						"type": "String"
					},
					{
						"name": "Est10",
						"type": "String"
					},
					{
						"name": "Est11",
						"type": "String"
					},
					{
						"name": "DQF1",
						"type": "String"
					},
					{
						"name": "DQF2",
						"type": "String"
					},
					{
						"name": "DQF3",
						"type": "String"
					},
					{
						"name": "DQF4",
						"type": "String"
					},
					{
						"name": "DQF5",
						"type": "String"
					},
					{
						"name": "DQF6",
						"type": "String"
					},
					{
						"name": "DQF7",
						"type": "String"
					},
					{
						"name": "DQF8",
						"type": "String"
					},
					{
						"name": "DQF9",
						"type": "String"
					},
					{
						"name": "DQF10",
						"type": "String"
					},
					{
						"name": "DQF11",
						"type": "String"
					},
					{
						"name": "RSE1",
						"type": "String"
					},
					{
						"name": "RSE2",
						"type": "String"
					},
					{
						"name": "RSE3",
						"type": "String"
					},
					{
						"name": "RSE4",
						"type": "String"
					},
					{
						"name": "RSE5",
						"type": "String"
					},
					{
						"name": "RSE6",
						"type": "String"
					},
					{
						"name": "RSE7",
						"type": "String"
					},
					{
						"name": "RSE8",
						"type": "String"
					},
					{
						"name": "RSE9",
						"type": "String"
					},
					{
						"name": "RSE10",
						"type": "String"
					},
					{
						"name": "RSE11",
						"type": "String"
					},
					{
						"name": "P1",
						"type": "String"
					},
					{
						"name": "P2",
						"type": "String"
					},
					{
						"name": "P3",
						"type": "String"
					},
					{
						"name": "P4",
						"type": "String"
					},
					{
						"name": "P5",
						"type": "String"
					},
					{
						"name": "P6",
						"type": "String"
					},
					{
						"name": "P7",
						"type": "String"
					},
					{
						"name": "P8",
						"type": "String"
					},
					{
						"name": "P9",
						"type": "String"
					},
					{
						"name": "P10",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/YEarData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/yearlow1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage4",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "csvtosql"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Table",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Rcode",
						"type": "String"
					},
					{
						"name": "Demographic",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Est1",
						"type": "String"
					},
					{
						"name": "Est2",
						"type": "String"
					},
					{
						"name": "Est3",
						"type": "String"
					},
					{
						"name": "Est4",
						"type": "String"
					},
					{
						"name": "Est5",
						"type": "String"
					},
					{
						"name": "Est6",
						"type": "String"
					},
					{
						"name": "Est7",
						"type": "String"
					},
					{
						"name": "Est8",
						"type": "String"
					},
					{
						"name": "Est9",
						"type": "String"
					},
					{
						"name": "Est10",
						"type": "String"
					},
					{
						"name": "Est11",
						"type": "String"
					},
					{
						"name": "DQF1",
						"type": "String"
					},
					{
						"name": "DQF2",
						"type": "String"
					},
					{
						"name": "DQF3",
						"type": "String"
					},
					{
						"name": "DQF4",
						"type": "String"
					},
					{
						"name": "DQF5",
						"type": "String"
					},
					{
						"name": "DQF6",
						"type": "String"
					},
					{
						"name": "DQF7",
						"type": "String"
					},
					{
						"name": "DQF8",
						"type": "String"
					},
					{
						"name": "DQF9",
						"type": "String"
					},
					{
						"name": "DQF10",
						"type": "String"
					},
					{
						"name": "DQF11",
						"type": "String"
					},
					{
						"name": "RSE1",
						"type": "String"
					},
					{
						"name": "RSE2",
						"type": "String"
					},
					{
						"name": "RSE3",
						"type": "String"
					},
					{
						"name": "RSE4",
						"type": "String"
					},
					{
						"name": "RSE5",
						"type": "String"
					},
					{
						"name": "RSE6",
						"type": "String"
					},
					{
						"name": "RSE7",
						"type": "String"
					},
					{
						"name": "RSE8",
						"type": "String"
					},
					{
						"name": "RSE9",
						"type": "String"
					},
					{
						"name": "RSE10",
						"type": "String"
					},
					{
						"name": "RSE11",
						"type": "String"
					},
					{
						"name": "P1",
						"type": "String"
					},
					{
						"name": "P2",
						"type": "String"
					},
					{
						"name": "P3",
						"type": "String"
					},
					{
						"name": "P4",
						"type": "String"
					},
					{
						"name": "P5",
						"type": "String"
					},
					{
						"name": "P6",
						"type": "String"
					},
					{
						"name": "P7",
						"type": "String"
					},
					{
						"name": "P8",
						"type": "String"
					},
					{
						"name": "P9",
						"type": "String"
					},
					{
						"name": "P10",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage3_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage4')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage4_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage5')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage5_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage6')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage6_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage7')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage7_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase3_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase4')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase4_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase5')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase5_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase6')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase6_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase7')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase7_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase_Inventory')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_Inventory_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/B050819')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('B050819_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_linkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('CSV_linkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSVtoSQLAzure_DK')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('CSVtoSQLAzure_DK_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cateorydata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Cateorydata_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataLink_DK')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('DataLink_DK_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dinesh_DB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('Dinesh_DB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EMP')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('EMP_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Incremental_Load')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Incremental_Load_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inventory')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Inventory_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inventory1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Inventory1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lookupandforeachcategory')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('Lookupandforeachcategory_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Categories')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SQL_Categories_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SVAzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('SVAzureBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SV_SqlServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SV_SqlServer_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SV_Sqlservers')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SV_Sqlservers_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalestoAzure')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('SalestoAzure_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer3_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer4')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer4_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer_new')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer_new_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServeronprem')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServeronprem_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sqlcategories')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('Sqlcategories_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Success')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Success_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/YEarData')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('YEarData_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Year2008')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Year2008_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adventureSqlServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('adventureSqlServer_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "PostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('linkedService1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azuretoonprim')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "source1",
							"typeProperties": {},
							"script": "source(output(\n\t\tID as string,\n\t\tNames as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DestinationASql",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"script": "ConditionalSplit1@name sink(input(\n\t\tID as string,\n\t\tNames as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false) ~> sink1"
						}
					],
					"transformations": [
						{
							"name": "ConditionalSplit1",
							"script": "source1 split(ID=='2',\n\tdisjoint: false) ~> ConditionalSplit1@(name)"
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/DestinationASql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blobstore')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "source1",
							"typeProperties": {},
							"script": "source(output(\n\t\tpname as string,\n\t\tage as integer,\n\t\tsalary as integer,\n\t\tcompanyname as string,\n\t\tpid as integer,\n\t\tgender as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT * FROM [dbo].[persons] NOLOCK',\n\tformat: 'query',\n\tpartitionBy('fixed', 2,\n\t\tage<26\n\t)) ~> source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "lookup",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"script": "source1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false) ~> sink1"
						}
					],
					"transformations": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/lookup')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blobtosql')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText4",
								"type": "DatasetReference"
							},
							"name": "source1",
							"typeProperties": {},
							"script": "source(output(\n\t\tID as string,\n\t\tNames as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CSVtoblob",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"script": "source1 sink(allowSchemaDrift: true,\n\tvalidateSchema: true,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false) ~> sink1"
						}
					],
					"transformations": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText4')]",
				"[concat(variables('factoryId'), '/datasets/CSVtoblob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CondtionalSpilt')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ConditionalSpilt",
								"type": "DatasetReference"
							},
							"name": "source",
							"typeProperties": {},
							"script": "source(output(\n\t\tTable as string,\n\t\tYear as string,\n\t\tRcode as string,\n\t\tDemographic as string,\n\t\tDescription as string,\n\t\tEst1 as string,\n\t\tEst2 as string,\n\t\tEst3 as string,\n\t\tEst4 as string,\n\t\tEst5 as string,\n\t\tEst6 as string,\n\t\tEst7 as string,\n\t\tEst8 as string,\n\t\tEst9 as string,\n\t\tEst10 as string,\n\t\tEst11 as string,\n\t\tDQF1 as string,\n\t\tDQF2 as string,\n\t\tDQF3 as string,\n\t\tDQF4 as string,\n\t\tDQF5 as string,\n\t\tDQF6 as string,\n\t\tDQF7 as string,\n\t\tDQF8 as string,\n\t\tDQF9 as string,\n\t\tDQF10 as string,\n\t\tDQF11 as string,\n\t\tRSE1 as string,\n\t\tRSE2 as string,\n\t\tRSE3 as string,\n\t\tRSE4 as string,\n\t\tRSE5 as string,\n\t\tRSE6 as string,\n\t\tRSE7 as string,\n\t\tRSE8 as string,\n\t\tRSE9 as string,\n\t\tRSE10 as string,\n\t\tRSE11 as string,\n\t\tP1 as string,\n\t\tP2 as string,\n\t\tP3 as string,\n\t\tP4 as string,\n\t\tP5 as string,\n\t\tP6 as string,\n\t\tP7 as string,\n\t\tP8 as string,\n\t\tP9 as string,\n\t\tP10 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select *from [dbo].[.HES2018-Table10]',\n\tformat: 'query') ~> source"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ConditionalDatayear",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"script": "ConditionalSplit1@Yearlow sink(input(\n\t\tTable as string,\n\t\tYear as string,\n\t\tRcode as string,\n\t\tDemographic as string,\n\t\tDescription as string,\n\t\tEst1 as string,\n\t\tEst2 as string,\n\t\tEst3 as string,\n\t\tEst4 as string,\n\t\tEst5 as string,\n\t\tEst6 as string,\n\t\tEst7 as string,\n\t\tEst8 as string,\n\t\tEst9 as string,\n\t\tEst10 as string,\n\t\tEst11 as string,\n\t\tDQF1 as string,\n\t\tDQF2 as string,\n\t\tDQF3 as string,\n\t\tDQF4 as string,\n\t\tDQF5 as string,\n\t\tDQF6 as string,\n\t\tDQF7 as string,\n\t\tDQF8 as string,\n\t\tDQF9 as string,\n\t\tDQF10 as string,\n\t\tDQF11 as string,\n\t\tRSE1 as string,\n\t\tRSE2 as string,\n\t\tRSE3 as string,\n\t\tRSE4 as string,\n\t\tRSE5 as string,\n\t\tRSE6 as string,\n\t\tRSE7 as string,\n\t\tRSE8 as string,\n\t\tRSE9 as string,\n\t\tRSE10 as string,\n\t\tRSE11 as string,\n\t\tP1 as string,\n\t\tP2 as string,\n\t\tP3 as string,\n\t\tP4 as string,\n\t\tP5 as string,\n\t\tP6 as string,\n\t\tP7 as string,\n\t\tP8 as string,\n\t\tP9 as string,\n\t\tP10 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> sink1"
						},
						{
							"dataset": {
								"referenceName": "Conditionalhihgdata",
								"type": "DatasetReference"
							},
							"name": "sink2",
							"script": "ConditionalSplit1@YearHigh sink(input(\n\t\tTable as string,\n\t\tYear as string,\n\t\tRcode as string,\n\t\tDemographic as string,\n\t\tDescription as string,\n\t\tEst1 as string,\n\t\tEst2 as string,\n\t\tEst3 as string,\n\t\tEst4 as string,\n\t\tEst5 as string,\n\t\tEst6 as string,\n\t\tEst7 as string,\n\t\tEst8 as string,\n\t\tEst9 as string,\n\t\tEst10 as string,\n\t\tEst11 as string,\n\t\tDQF1 as string,\n\t\tDQF2 as string,\n\t\tDQF3 as string,\n\t\tDQF4 as string,\n\t\tDQF5 as string,\n\t\tDQF6 as string,\n\t\tDQF7 as string,\n\t\tDQF8 as string,\n\t\tDQF9 as string,\n\t\tDQF10 as string,\n\t\tDQF11 as string,\n\t\tRSE1 as string,\n\t\tRSE2 as string,\n\t\tRSE3 as string,\n\t\tRSE4 as string,\n\t\tRSE5 as string,\n\t\tRSE6 as string,\n\t\tRSE7 as string,\n\t\tRSE8 as string,\n\t\tRSE9 as string,\n\t\tRSE10 as string,\n\t\tRSE11 as string,\n\t\tP1 as string,\n\t\tP2 as string,\n\t\tP3 as string,\n\t\tP4 as string,\n\t\tP5 as string,\n\t\tP6 as string,\n\t\tP7 as string,\n\t\tP8 as string,\n\t\tP9 as string,\n\t\tP10 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> sink2"
						}
					],
					"transformations": [
						{
							"name": "ConditionalSplit1",
							"script": "source split(Year<'2012',\n\tYear>='2012',\n\tdisjoint: false) ~> ConditionalSplit1@(Yearlow, YearHigh)"
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ConditionalSpilt')]",
				"[concat(variables('factoryId'), '/datasets/ConditionalDatayear')]",
				"[concat(variables('factoryId'), '/datasets/Conditionalhihgdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyCSV_DK')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText_DK",
								"type": "DatasetReference"
							},
							"name": "SourceDK",
							"typeProperties": {},
							"script": "source(output(\n\t\tTable as string,\n\t\tYear as string,\n\t\tRcode as string,\n\t\tDemographic as string,\n\t\tDescription as string,\n\t\tEst1 as string,\n\t\tEst2 as string,\n\t\tEst3 as string,\n\t\tEst4 as string,\n\t\tEst5 as string,\n\t\tEst6 as string,\n\t\tEst7 as string,\n\t\tEst8 as string,\n\t\tEst9 as string,\n\t\tEst10 as string,\n\t\tEst11 as string,\n\t\tDQF1 as string,\n\t\tDQF2 as string,\n\t\tDQF3 as string,\n\t\tDQF4 as string,\n\t\tDQF5 as string,\n\t\tDQF6 as string,\n\t\tDQF7 as string,\n\t\tDQF8 as string,\n\t\tDQF9 as string,\n\t\tDQF10 as string,\n\t\tDQF11 as string,\n\t\tRSE1 as string,\n\t\tRSE2 as string,\n\t\tRSE3 as string,\n\t\tRSE4 as string,\n\t\tRSE5 as string,\n\t\tRSE6 as string,\n\t\tRSE7 as string,\n\t\tRSE8 as string,\n\t\tRSE9 as string,\n\t\tRSE10 as string,\n\t\tRSE11 as string,\n\t\tP1 as string,\n\t\tP2 as string,\n\t\tP3 as string,\n\t\tP4 as string,\n\t\tP5 as string,\n\t\tP6 as string,\n\t\tP7 as string,\n\t\tP8 as string,\n\t\tP9 as string,\n\t\tP10 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> SourceDK"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DataBefore2015",
								"type": "DatasetReference"
							},
							"name": "CSVDataBefore2015",
							"script": "YearviseData@Before2015 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false) ~> CSVDataBefore2015"
						},
						{
							"dataset": {
								"referenceName": "CSVData_After2015",
								"type": "DatasetReference"
							},
							"name": "CSVDataAfter2015",
							"script": "YearviseData@After2015 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false) ~> CSVDataAfter2015"
						}
					],
					"transformations": [
						{
							"name": "YearviseData",
							"script": "SourceDK split(toInteger(Year)<=2015,\n\tdisjoint: false) ~> YearviseData@(Before2015, After2015)"
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText_DK')]",
				"[concat(variables('factoryId'), '/datasets/DataBefore2015')]",
				"[concat(variables('factoryId'), '/datasets/CSVData_After2015')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimEmployeeLoader21')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "EmployeeFiles1",
								"type": "DatasetReference"
							},
							"name": "Employees1",
							"description": " Source employees file, changes every day",
							"typeProperties": {},
							"script": "source(output(\n\t\tEmpID as string,\n\t\tRegion as string,\n\t\tStatus as string,\n\t\tFunction as string,\n\t\tLevel as string,\n\t\tRole as string,\n\t\tStartDate as string,\n\t\tEndDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpurgeFiles: true,\n\twildcardPaths:['SampleData/Emps/today/*.csv']) ~> Employees1"
						},
						{
							"dataset": {
								"referenceName": "DimEmp1",
								"type": "DatasetReference"
							},
							"name": "DimEmployees",
							"description": "Current rows in DimEmployees DW table",
							"typeProperties": {},
							"script": "source(output(\n\t\tEmpID as integer,\n\t\tsurrogatekey as string,\n\t\tRegion as string,\n\t\tStatus as string,\n\t\tEmpFunction as string,\n\t\tLevel as string,\n\t\tRole as string,\n\t\tStartDate as date,\n\t\tEndDate as date,\n\t\tiscurrent as integer,\n\t\tprocesstime as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimEmployees"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DimEmp1",
								"type": "DatasetReference"
							},
							"name": "sinkNew",
							"description": " ",
							"script": "SetAttrsForNew sink(input(\n\t\tEmpID as integer,\n\t\tsurrogatekey as string,\n\t\tRegion as string,\n\t\tStatus as string,\n\t\tEmpFunction as string,\n\t\tLevel as string,\n\t\tRole as string,\n\t\tStartDate as date,\n\t\tEndDate as date,\n\t\tiscurrent as integer,\n\t\tprocesstime as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tbatchSize:50,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false) ~> sinkNew"
						},
						{
							"dataset": {
								"referenceName": "DimEmp1",
								"type": "DatasetReference"
							},
							"name": "sinkUpdates",
							"description": " ",
							"script": "SetAttrsUpdate sink(input(\n\t\tEmpID as integer,\n\t\tsurrogatekey as string,\n\t\tRegion as string,\n\t\tStatus as string,\n\t\tEmpFunction as string,\n\t\tLevel as string,\n\t\tRole as string,\n\t\tStartDate as date,\n\t\tEndDate as date,\n\t\tiscurrent as integer,\n\t\tprocesstime as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tbatchSize:50,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false) ~> sinkUpdates"
						},
						{
							"dataset": {
								"referenceName": "DimEmp1",
								"type": "DatasetReference"
							},
							"name": "sinkInactive",
							"description": " Age out old rows",
							"script": "AlterRow1 sink(input(\n\t\tEmpID as integer,\n\t\tsurrogatekey as string,\n\t\tRegion as string,\n\t\tStatus as string,\n\t\tEmpFunction as string,\n\t\tLevel as string,\n\t\tRole as string,\n\t\tStartDate as date,\n\t\tEndDate as date,\n\t\tiscurrent as integer,\n\t\tprocesstime as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tbatchSize:50,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['EmpID'],\n\tmapColumn(\n\t\tEmpID,\n\t\tEndDate,\n\t\tiscurrent,\n\t\tprocesstime\n\t)) ~> sinkInactive"
						}
					],
					"transformations": [
						{
							"name": "TypeConversions",
							"script": "DimEmployees derive(EmpID = toInteger(EmpID)) ~> TypeConversions"
						},
						{
							"name": "TypeConversionsAndSetAttrs",
							"script": "NullFilter derive(EmpID = toInteger(EmpID),\n\t\tStartDate = toDate(StartDate,'MM/dd/yyyy'),\n\t\tEndDate = toDate(EndDate,'MM/dd/yyyy'),\n\t\tprocesstime = currentTimestamp()) ~> TypeConversionsAndSetAttrs"
						},
						{
							"name": "LookupIDs",
							"script": "TypeConversionsAndSetAttrs, TypeConversions lookup(TypeConversionsAndSetAttrs@EmpID == TypeConversions@EmpID,\n\tbroadcast: 'none')~> LookupIDs"
						},
						{
							"name": "ConditionalSplit1",
							"script": "NormNames split(isNull(iscurrent),\n\tdisjoint: false) ~> ConditionalSplit1@(NewRow, CheckForUpdates)"
						},
						{
							"name": "checkForChanges",
							"script": "NameNorm2, TypeConversions exists(NameNorm2@EmpID == TypeConversions@EmpID,\n\tnegate:false,\n\tbroadcast: 'none')~> checkForChanges"
						},
						{
							"name": "SetAttrsForNew",
							"script": "ConditionalSplit1@NewRow derive(iscurrent = 1,\n\t\tsurrogatekey = toString(crc32(EmpID,EmpFunction))) ~> SetAttrsForNew"
						},
						{
							"name": "SetAttrsInactive",
							"description": "make iscurrent 0",
							"script": "checkForChanges derive(iscurrent = 0) ~> SetAttrsInactive"
						},
						{
							"name": "SetAttrsUpdate",
							"script": "checkForChanges derive(iscurrent = 1) ~> SetAttrsUpdate"
						},
						{
							"name": "NormNames",
							"script": "LookupIDs select(mapColumn(\n\t\tEmpID = TypeConversionsAndSetAttrs@EmpID,\n\t\tRegion = Employees1@Region,\n\t\tStatus = Employees1@Status,\n\t\tLevel = Employees1@Level,\n\t\tRole = Employees1@Role,\n\t\tStartDate = TypeConversionsAndSetAttrs@StartDate,\n\t\tEndDate = TypeConversionsAndSetAttrs@EndDate,\n\t\tEmpFunction = Function,\n\t\tiscurrent,\n\t\tprocesstime = TypeConversionsAndSetAttrs@processtime,\n\t\tsurrogatekey\n\t))~> NormNames"
						},
						{
							"name": "InactiveFields",
							"script": "SetAttrsInactive select(mapColumn(\n\t\tEmpID,\n\t\tStatus,\n\t\tEndDate,\n\t\tiscurrent,\n\t\tprocesstime\n\t))~> InactiveFields"
						},
						{
							"name": "AlterRow1",
							"script": "InactiveFields alterRow(updateIf(true())) ~> AlterRow1"
						},
						{
							"name": "NullFilter",
							"description": "Filter out NULLs from source file",
							"script": "Employees1 filter(!isNull(EmpID)) ~> NullFilter"
						},
						{
							"name": "NameNorm2",
							"script": "ConditionalSplit1@CheckForUpdates select(mapColumn(\n\t\tEmpID,\n\t\tRegion,\n\t\tStatus,\n\t\tLevel,\n\t\tRole,\n\t\tStartDate,\n\t\tEndDate,\n\t\tEmpFunction,\n\t\tiscurrent,\n\t\tprocesstime,\n\t\tsurrogatekey\n\t))~> NameNorm2"
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/EmployeeFiles1')]",
				"[concat(variables('factoryId'), '/datasets/DimEmp1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Onprim')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "source1",
							"typeProperties": {},
							"script": "source(output(\n\t\tID as string,\n\t\tNames as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText3",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"script": "source1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> sink1"
						}
					],
					"transformations": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLtoAzureSQL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SQLASQL",
								"type": "DatasetReference"
							},
							"name": "source1",
							"typeProperties": {},
							"script": "source(output(\n\t\tID as string,\n\t\tNames as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Azure_Conditions_split",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"script": "ConditionalSplit1@name sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false) ~> sink1"
						}
					],
					"transformations": [
						{
							"name": "ConditionalSplit1",
							"script": "source1 split(Names=='B',\n\tdisjoint: false) ~> ConditionalSplit1@(name)"
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQLASQL')]",
				"[concat(variables('factoryId'), '/datasets/Azure_Conditions_split')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SV_CSVtoSQL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SV_DelimitedText",
								"type": "DatasetReference"
							},
							"name": "CSVFile",
							"typeProperties": {},
							"script": "source(output(\n\t\tTable as string,\n\t\tYear as string,\n\t\tRcode as string,\n\t\tDemographic as string,\n\t\tDescription as string,\n\t\tEst1 as string,\n\t\tEst2 as string,\n\t\tEst3 as string,\n\t\tEst4 as string,\n\t\tEst5 as string,\n\t\tEst6 as string,\n\t\tEst7 as string,\n\t\tEst8 as string,\n\t\tEst9 as string,\n\t\tEst10 as string,\n\t\tEst11 as string,\n\t\tDQF1 as string,\n\t\tDQF2 as string,\n\t\tDQF3 as string,\n\t\tDQF4 as string,\n\t\tDQF5 as string,\n\t\tDQF6 as string,\n\t\tDQF7 as string,\n\t\tDQF8 as string,\n\t\tDQF9 as string,\n\t\tDQF10 as string,\n\t\tDQF11 as string,\n\t\tRSE1 as string,\n\t\tRSE2 as string,\n\t\tRSE3 as string,\n\t\tRSE4 as string,\n\t\tRSE5 as string,\n\t\tRSE6 as string,\n\t\tRSE7 as string,\n\t\tRSE8 as string,\n\t\tRSE9 as string,\n\t\tRSE10 as string,\n\t\tRSE11 as string,\n\t\tP1 as string,\n\t\tP2 as string,\n\t\tP3 as string,\n\t\tP4 as string,\n\t\tP5 as string,\n\t\tP6 as string,\n\t\tP7 as string,\n\t\tP8 as string,\n\t\tP9 as string,\n\t\tP10 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\twildcardPaths:['HES2018-Table10.csv']) ~> CSVFile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SV_AzureSqlTable",
								"type": "DatasetReference"
							},
							"name": "SQL",
							"script": "CSVFile sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false) ~> SQL"
						}
					],
					"transformations": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SV_DelimitedText')]",
				"[concat(variables('factoryId'), '/datasets/SV_AzureSqlTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Success')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText2",
								"type": "DatasetReference"
							},
							"name": "source1",
							"typeProperties": {},
							"script": "source(output(\n\t\tid as string,\n\t\tname as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"script": "source1 sink(input(\n\t\tID as string,\n\t\tNames as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tmapColumn(\n\t\tID = id,\n\t\tNames = name\n\t)) ~> sink1"
						}
					],
					"transformations": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "source1",
							"typeProperties": {},
							"script": "source(output(\n\t\tid as string,\n\t\tname as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 100) ~> source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"script": "source1 sink(input(\n\t\tID as string,\n\t\tNames as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tmapColumn(\n\t\tID = id,\n\t\tNames = name\n\t)) ~> sink1"
						}
					],
					"transformations": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aZ')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ASQL",
								"type": "DatasetReference"
							},
							"name": "source1",
							"typeProperties": {},
							"script": "source(output(\n\t\tID as string,\n\t\tName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: true) ~> source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"script": "source1 sink(input(\n\t\tID as string,\n\t\tNames as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tmapColumn(\n\t\tID,\n\t\tNames = Name\n\t)) ~> sink1"
						}
					],
					"transformations": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ASQL')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "source1",
							"typeProperties": {},
							"script": "source(output(\n\t\tid as string,\n\t\tname as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 100) ~> source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"script": "ConditionalSplit1@name sink(input(\n\t\tID as string,\n\t\tNames as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tmapColumn(\n\t\tID = id,\n\t\tNames = name\n\t)) ~> sink1"
						}
					],
					"transformations": [
						{
							"name": "ConditionalSplit1",
							"script": "source1 split(name=='sara',\n\tdisjoint: true) ~> ConditionalSplit1@(name)"
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/json')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Json",
								"type": "DatasetReference"
							},
							"name": "source1",
							"typeProperties": {},
							"script": "source(output(\n\t\tProp_0 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DB",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"script": "source1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false) ~> sink1"
						}
					],
					"transformations": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json')]",
				"[concat(variables('factoryId'), '/datasets/DB')]"
			]
		}
	]
}