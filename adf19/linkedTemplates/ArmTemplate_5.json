{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "adf19"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/yearlow1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage4",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "csvtosql"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Table",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Rcode",
						"type": "String"
					},
					{
						"name": "Demographic",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Est1",
						"type": "String"
					},
					{
						"name": "Est2",
						"type": "String"
					},
					{
						"name": "Est3",
						"type": "String"
					},
					{
						"name": "Est4",
						"type": "String"
					},
					{
						"name": "Est5",
						"type": "String"
					},
					{
						"name": "Est6",
						"type": "String"
					},
					{
						"name": "Est7",
						"type": "String"
					},
					{
						"name": "Est8",
						"type": "String"
					},
					{
						"name": "Est9",
						"type": "String"
					},
					{
						"name": "Est10",
						"type": "String"
					},
					{
						"name": "Est11",
						"type": "String"
					},
					{
						"name": "DQF1",
						"type": "String"
					},
					{
						"name": "DQF2",
						"type": "String"
					},
					{
						"name": "DQF3",
						"type": "String"
					},
					{
						"name": "DQF4",
						"type": "String"
					},
					{
						"name": "DQF5",
						"type": "String"
					},
					{
						"name": "DQF6",
						"type": "String"
					},
					{
						"name": "DQF7",
						"type": "String"
					},
					{
						"name": "DQF8",
						"type": "String"
					},
					{
						"name": "DQF9",
						"type": "String"
					},
					{
						"name": "DQF10",
						"type": "String"
					},
					{
						"name": "DQF11",
						"type": "String"
					},
					{
						"name": "RSE1",
						"type": "String"
					},
					{
						"name": "RSE2",
						"type": "String"
					},
					{
						"name": "RSE3",
						"type": "String"
					},
					{
						"name": "RSE4",
						"type": "String"
					},
					{
						"name": "RSE5",
						"type": "String"
					},
					{
						"name": "RSE6",
						"type": "String"
					},
					{
						"name": "RSE7",
						"type": "String"
					},
					{
						"name": "RSE8",
						"type": "String"
					},
					{
						"name": "RSE9",
						"type": "String"
					},
					{
						"name": "RSE10",
						"type": "String"
					},
					{
						"name": "RSE11",
						"type": "String"
					},
					{
						"name": "P1",
						"type": "String"
					},
					{
						"name": "P2",
						"type": "String"
					},
					{
						"name": "P3",
						"type": "String"
					},
					{
						"name": "P4",
						"type": "String"
					},
					{
						"name": "P5",
						"type": "String"
					},
					{
						"name": "P6",
						"type": "String"
					},
					{
						"name": "P7",
						"type": "String"
					},
					{
						"name": "P8",
						"type": "String"
					},
					{
						"name": "P9",
						"type": "String"
					},
					{
						"name": "P10",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_tmr')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_tmr",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[[dbo].[persons]"
							},
							{
								"name": "Destination",
								"value": "[[dbo].[persons]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"pname": "pname",
									"age": "age",
									"salary": "salary",
									"companyname": "companyname",
									"pid": "pid",
									"gender": "gender"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_tmr",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_tmr",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copydatafromdbtoblob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_j35",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "[[dbo].[Test]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from Test"
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBatchSize": 10000
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "SVAzureBlobStorage2",
									"type": "LinkedServiceReference"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"ID": "ID",
									"Names": "Names"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_j35",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_j35",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dynamicvalue')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "exec SP_flag1"
							},
							"dataset": {
								"referenceName": "Azure_Conditions_split",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Stored Procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_parameterflag]",
							"storedProcedureParameters": {
								"ID": {
									"value": {
										"value": "@{activity('Lookup1').output.firstRow.flag}",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SqlServer1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"lookupParameter": {
						"type": "string"
					}
				},
				"variables": {
					"lookupvariable": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dynamis')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT 2 AS ID"
							},
							"dataset": {
								"referenceName": "DestinationDataset_j35",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@array(activity('Lookup1').output)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Stored Procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SP_parameterflag]",
										"storedProcedureParameters": {
											"ID": {
												"value": {
													"value": "int(2)",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"rtr": {
						"type": "string"
					}
				},
				"variables": {
					"RRR": {
						"type": "Array",
						"defaultValue": [
							1,
							2,
							3,
							4
						]
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SV_CopyPipeline_nuzontA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_nuz",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "[[dbo].[Sample_Test_DK]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * FROM [AdventureWorks2016].[HumanResources].[Employee]"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BusinessEntityID",
											"type": "Int32"
										},
										"sink": {
											"name": "BusinessEntityID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NationalIDNumber",
											"type": "String"
										},
										"sink": {
											"name": "NationalIDNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LoginID",
											"type": "String"
										},
										"sink": {
											"name": "LoginID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OrganizationNode"
										},
										"sink": {
											"name": "OrganizationNode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OrganizationLevel",
											"type": "Int16"
										},
										"sink": {
											"name": "OrganizationLevel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "JobTitle",
											"type": "String"
										},
										"sink": {
											"name": "JobTitle",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SickLeaveHours",
											"type": "Int16"
										},
										"sink": {
											"name": "SickLeaveHours",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CurrentFlag",
											"type": "Boolean"
										},
										"sink": {
											"name": "CurrentFlag",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "rowguid",
											"type": "Guid"
										},
										"sink": {
											"name": "rowguid",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BirthDate",
											"type": "Date"
										},
										"sink": {
											"name": "BirthDate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MaritalStatus",
											"type": "String"
										},
										"sink": {
											"name": "MaritalStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String"
										},
										"sink": {
											"name": "Gender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HireDate",
											"type": "Date"
										},
										"sink": {
											"name": "HireDate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SalariedFlag",
											"type": "Boolean"
										},
										"sink": {
											"name": "SalariedFlag",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VacationHours",
											"type": "Int16"
										},
										"sink": {
											"name": "VacationHours",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_nuz",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_nuz",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SimplpyCopyData_DK')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_qb4",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "[[dbo].[Sample_Test_DK]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from Sample_EMP where BusinessEntityID between 1 and 100"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BusinessEntityID",
											"type": "String"
										},
										"sink": {
											"name": "BusinessEntityID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NationalIDNumber",
											"type": "String"
										},
										"sink": {
											"name": "NationalIDNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LoginID",
											"type": "String"
										},
										"sink": {
											"name": "LoginID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OrganizationNode",
											"type": "String"
										},
										"sink": {
											"name": "OrganizationNode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OrganizationLevel",
											"type": "String"
										},
										"sink": {
											"name": "OrganizationLevel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "JobTitle",
											"type": "String"
										},
										"sink": {
											"name": "JobTitle",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SickLeaveHours",
											"type": "String"
										},
										"sink": {
											"name": "SickLeaveHours",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CurrentFlag",
											"type": "String"
										},
										"sink": {
											"name": "CurrentFlag",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "rowguid",
											"type": "String"
										},
										"sink": {
											"name": "rowguid",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "String"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BirthDate",
											"type": "String"
										},
										"sink": {
											"name": "BirthDate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MaritalStatus",
											"type": "String"
										},
										"sink": {
											"name": "MaritalStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String"
										},
										"sink": {
											"name": "Gender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HireDate",
											"type": "String"
										},
										"sink": {
											"name": "HireDate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SalariedFlag",
											"type": "String"
										},
										"sink": {
											"name": "SalariedFlag",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VacationHours",
											"type": "String"
										},
										"sink": {
											"name": "VacationHours",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_qb4",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_qb4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline8')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource"
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "String"
										},
										"sink": {
											"name": "ID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Names",
											"type": "String"
										},
										"sink": {
											"name": "Names",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DestinationASql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "onprimis",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline9')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "DATA",
								"value": "1"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT TOP 1 Names FROM [dbo].[BlobTest] NOLOCK"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set Variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Test",
							"value": {
								"value": "@activity('Lookup1').output",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"Test1": {
						"type": "string",
						"defaultValue": "1"
					}
				},
				"variables": {
					"Test": {
						"type": "String",
						"defaultValue": "1"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinelookupandforeach')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupCategories",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[dbo].[getProductCategory]"
							},
							"dataset": {
								"referenceName": "SqlServerTable",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupCategories').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CopyData",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderStoredProcedureName": "[[dbo].[getsales]",
											"storedProcedureParameters": {
												"productcategory": {
													"type": "String",
													"value": {
														"value": "@item().Category",
														"type": "Expression"
													}
												}
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSetting"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSetting",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "OrderDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "OrderDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "PurchaseOrderNumber",
														"type": "String"
													},
													"sink": {
														"name": "PurchaseOrderNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Amount",
														"type": "Decimal"
													},
													"sink": {
														"name": "Amount",
														"type": "Decimal"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "Category",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Lookupandforeachcategory",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "StoredProcedure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CopyData",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[updateproductdeails]",
										"storedProcedureParameters": {
											"duration": {
												"value": {
													"value": "@activity('CopyData').output.CopyDuration",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"productcategory": {
												"value": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SV_Sqlservers",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azuretoonprim')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "source1",
							"typeProperties": {},
							"script": "source(output(\n\t\tID as string,\n\t\tNames as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DestinationASql",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"script": "ConditionalSplit1@name sink(input(\n\t\tID as string,\n\t\tNames as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false) ~> sink1"
						}
					],
					"transformations": [
						{
							"name": "ConditionalSplit1",
							"script": "source1 split(ID=='2',\n\tdisjoint: false) ~> ConditionalSplit1@(name)"
						}
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blobstore')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "source1",
							"typeProperties": {},
							"script": "source(output(\n\t\tpname as string,\n\t\tage as integer,\n\t\tsalary as integer,\n\t\tcompanyname as string,\n\t\tpid as integer,\n\t\tgender as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT * FROM [dbo].[persons] NOLOCK',\n\tformat: 'query',\n\tpartitionBy('fixed', 2,\n\t\tage<26\n\t)) ~> source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "lookup",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"script": "source1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false) ~> sink1"
						}
					],
					"transformations": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blobtosql')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText4",
								"type": "DatasetReference"
							},
							"name": "source1",
							"typeProperties": {},
							"script": "source(output(\n\t\tID as string,\n\t\tNames as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CSVtoblob",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"script": "source1 sink(allowSchemaDrift: true,\n\tvalidateSchema: true,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false) ~> sink1"
						}
					],
					"transformations": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CondtionalSpilt')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ConditionalSpilt",
								"type": "DatasetReference"
							},
							"name": "source",
							"typeProperties": {},
							"script": "source(output(\n\t\tTable as string,\n\t\tYear as string,\n\t\tRcode as string,\n\t\tDemographic as string,\n\t\tDescription as string,\n\t\tEst1 as string,\n\t\tEst2 as string,\n\t\tEst3 as string,\n\t\tEst4 as string,\n\t\tEst5 as string,\n\t\tEst6 as string,\n\t\tEst7 as string,\n\t\tEst8 as string,\n\t\tEst9 as string,\n\t\tEst10 as string,\n\t\tEst11 as string,\n\t\tDQF1 as string,\n\t\tDQF2 as string,\n\t\tDQF3 as string,\n\t\tDQF4 as string,\n\t\tDQF5 as string,\n\t\tDQF6 as string,\n\t\tDQF7 as string,\n\t\tDQF8 as string,\n\t\tDQF9 as string,\n\t\tDQF10 as string,\n\t\tDQF11 as string,\n\t\tRSE1 as string,\n\t\tRSE2 as string,\n\t\tRSE3 as string,\n\t\tRSE4 as string,\n\t\tRSE5 as string,\n\t\tRSE6 as string,\n\t\tRSE7 as string,\n\t\tRSE8 as string,\n\t\tRSE9 as string,\n\t\tRSE10 as string,\n\t\tRSE11 as string,\n\t\tP1 as string,\n\t\tP2 as string,\n\t\tP3 as string,\n\t\tP4 as string,\n\t\tP5 as string,\n\t\tP6 as string,\n\t\tP7 as string,\n\t\tP8 as string,\n\t\tP9 as string,\n\t\tP10 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select *from [dbo].[.HES2018-Table10]',\n\tformat: 'query') ~> source"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ConditionalDatayear",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"script": "ConditionalSplit1@Yearlow sink(input(\n\t\tTable as string,\n\t\tYear as string,\n\t\tRcode as string,\n\t\tDemographic as string,\n\t\tDescription as string,\n\t\tEst1 as string,\n\t\tEst2 as string,\n\t\tEst3 as string,\n\t\tEst4 as string,\n\t\tEst5 as string,\n\t\tEst6 as string,\n\t\tEst7 as string,\n\t\tEst8 as string,\n\t\tEst9 as string,\n\t\tEst10 as string,\n\t\tEst11 as string,\n\t\tDQF1 as string,\n\t\tDQF2 as string,\n\t\tDQF3 as string,\n\t\tDQF4 as string,\n\t\tDQF5 as string,\n\t\tDQF6 as string,\n\t\tDQF7 as string,\n\t\tDQF8 as string,\n\t\tDQF9 as string,\n\t\tDQF10 as string,\n\t\tDQF11 as string,\n\t\tRSE1 as string,\n\t\tRSE2 as string,\n\t\tRSE3 as string,\n\t\tRSE4 as string,\n\t\tRSE5 as string,\n\t\tRSE6 as string,\n\t\tRSE7 as string,\n\t\tRSE8 as string,\n\t\tRSE9 as string,\n\t\tRSE10 as string,\n\t\tRSE11 as string,\n\t\tP1 as string,\n\t\tP2 as string,\n\t\tP3 as string,\n\t\tP4 as string,\n\t\tP5 as string,\n\t\tP6 as string,\n\t\tP7 as string,\n\t\tP8 as string,\n\t\tP9 as string,\n\t\tP10 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> sink1"
						},
						{
							"dataset": {
								"referenceName": "Conditionalhihgdata",
								"type": "DatasetReference"
							},
							"name": "sink2",
							"script": "ConditionalSplit1@YearHigh sink(input(\n\t\tTable as string,\n\t\tYear as string,\n\t\tRcode as string,\n\t\tDemographic as string,\n\t\tDescription as string,\n\t\tEst1 as string,\n\t\tEst2 as string,\n\t\tEst3 as string,\n\t\tEst4 as string,\n\t\tEst5 as string,\n\t\tEst6 as string,\n\t\tEst7 as string,\n\t\tEst8 as string,\n\t\tEst9 as string,\n\t\tEst10 as string,\n\t\tEst11 as string,\n\t\tDQF1 as string,\n\t\tDQF2 as string,\n\t\tDQF3 as string,\n\t\tDQF4 as string,\n\t\tDQF5 as string,\n\t\tDQF6 as string,\n\t\tDQF7 as string,\n\t\tDQF8 as string,\n\t\tDQF9 as string,\n\t\tDQF10 as string,\n\t\tDQF11 as string,\n\t\tRSE1 as string,\n\t\tRSE2 as string,\n\t\tRSE3 as string,\n\t\tRSE4 as string,\n\t\tRSE5 as string,\n\t\tRSE6 as string,\n\t\tRSE7 as string,\n\t\tRSE8 as string,\n\t\tRSE9 as string,\n\t\tRSE10 as string,\n\t\tRSE11 as string,\n\t\tP1 as string,\n\t\tP2 as string,\n\t\tP3 as string,\n\t\tP4 as string,\n\t\tP5 as string,\n\t\tP6 as string,\n\t\tP7 as string,\n\t\tP8 as string,\n\t\tP9 as string,\n\t\tP10 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> sink2"
						}
					],
					"transformations": [
						{
							"name": "ConditionalSplit1",
							"script": "source split(Year<'2012',\n\tYear>='2012',\n\tdisjoint: false) ~> ConditionalSplit1@(Yearlow, YearHigh)"
						}
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyCSV_DK')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText_DK",
								"type": "DatasetReference"
							},
							"name": "SourceDK",
							"typeProperties": {},
							"script": "source(output(\n\t\tTable as string,\n\t\tYear as string,\n\t\tRcode as string,\n\t\tDemographic as string,\n\t\tDescription as string,\n\t\tEst1 as string,\n\t\tEst2 as string,\n\t\tEst3 as string,\n\t\tEst4 as string,\n\t\tEst5 as string,\n\t\tEst6 as string,\n\t\tEst7 as string,\n\t\tEst8 as string,\n\t\tEst9 as string,\n\t\tEst10 as string,\n\t\tEst11 as string,\n\t\tDQF1 as string,\n\t\tDQF2 as string,\n\t\tDQF3 as string,\n\t\tDQF4 as string,\n\t\tDQF5 as string,\n\t\tDQF6 as string,\n\t\tDQF7 as string,\n\t\tDQF8 as string,\n\t\tDQF9 as string,\n\t\tDQF10 as string,\n\t\tDQF11 as string,\n\t\tRSE1 as string,\n\t\tRSE2 as string,\n\t\tRSE3 as string,\n\t\tRSE4 as string,\n\t\tRSE5 as string,\n\t\tRSE6 as string,\n\t\tRSE7 as string,\n\t\tRSE8 as string,\n\t\tRSE9 as string,\n\t\tRSE10 as string,\n\t\tRSE11 as string,\n\t\tP1 as string,\n\t\tP2 as string,\n\t\tP3 as string,\n\t\tP4 as string,\n\t\tP5 as string,\n\t\tP6 as string,\n\t\tP7 as string,\n\t\tP8 as string,\n\t\tP9 as string,\n\t\tP10 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> SourceDK"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DataBefore2015",
								"type": "DatasetReference"
							},
							"name": "CSVDataBefore2015",
							"script": "YearviseData@Before2015 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false) ~> CSVDataBefore2015"
						},
						{
							"dataset": {
								"referenceName": "CSVData_After2015",
								"type": "DatasetReference"
							},
							"name": "CSVDataAfter2015",
							"script": "YearviseData@After2015 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false) ~> CSVDataAfter2015"
						}
					],
					"transformations": [
						{
							"name": "YearviseData",
							"script": "SourceDK split(toInteger(Year)<=2015,\n\tdisjoint: false) ~> YearviseData@(Before2015, After2015)"
						}
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimEmployeeLoader21')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "EmployeeFiles1",
								"type": "DatasetReference"
							},
							"name": "Employees1",
							"description": " Source employees file, changes every day",
							"typeProperties": {},
							"script": "source(output(\n\t\tEmpID as string,\n\t\tRegion as string,\n\t\tStatus as string,\n\t\tFunction as string,\n\t\tLevel as string,\n\t\tRole as string,\n\t\tStartDate as string,\n\t\tEndDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpurgeFiles: true,\n\twildcardPaths:['SampleData/Emps/today/*.csv']) ~> Employees1"
						},
						{
							"dataset": {
								"referenceName": "DimEmp1",
								"type": "DatasetReference"
							},
							"name": "DimEmployees",
							"description": "Current rows in DimEmployees DW table",
							"typeProperties": {},
							"script": "source(output(\n\t\tEmpID as integer,\n\t\tsurrogatekey as string,\n\t\tRegion as string,\n\t\tStatus as string,\n\t\tEmpFunction as string,\n\t\tLevel as string,\n\t\tRole as string,\n\t\tStartDate as date,\n\t\tEndDate as date,\n\t\tiscurrent as integer,\n\t\tprocesstime as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimEmployees"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DimEmp1",
								"type": "DatasetReference"
							},
							"name": "sinkNew",
							"description": " ",
							"script": "SetAttrsForNew sink(input(\n\t\tEmpID as integer,\n\t\tsurrogatekey as string,\n\t\tRegion as string,\n\t\tStatus as string,\n\t\tEmpFunction as string,\n\t\tLevel as string,\n\t\tRole as string,\n\t\tStartDate as date,\n\t\tEndDate as date,\n\t\tiscurrent as integer,\n\t\tprocesstime as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tbatchSize:50,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false) ~> sinkNew"
						},
						{
							"dataset": {
								"referenceName": "DimEmp1",
								"type": "DatasetReference"
							},
							"name": "sinkUpdates",
							"description": " ",
							"script": "SetAttrsUpdate sink(input(\n\t\tEmpID as integer,\n\t\tsurrogatekey as string,\n\t\tRegion as string,\n\t\tStatus as string,\n\t\tEmpFunction as string,\n\t\tLevel as string,\n\t\tRole as string,\n\t\tStartDate as date,\n\t\tEndDate as date,\n\t\tiscurrent as integer,\n\t\tprocesstime as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tbatchSize:50,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false) ~> sinkUpdates"
						},
						{
							"dataset": {
								"referenceName": "DimEmp1",
								"type": "DatasetReference"
							},
							"name": "sinkInactive",
							"description": " Age out old rows",
							"script": "AlterRow1 sink(input(\n\t\tEmpID as integer,\n\t\tsurrogatekey as string,\n\t\tRegion as string,\n\t\tStatus as string,\n\t\tEmpFunction as string,\n\t\tLevel as string,\n\t\tRole as string,\n\t\tStartDate as date,\n\t\tEndDate as date,\n\t\tiscurrent as integer,\n\t\tprocesstime as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tbatchSize:50,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['EmpID'],\n\tmapColumn(\n\t\tEmpID,\n\t\tEndDate,\n\t\tiscurrent,\n\t\tprocesstime\n\t)) ~> sinkInactive"
						}
					],
					"transformations": [
						{
							"name": "TypeConversions",
							"script": "DimEmployees derive(EmpID = toInteger(EmpID)) ~> TypeConversions"
						},
						{
							"name": "TypeConversionsAndSetAttrs",
							"script": "NullFilter derive(EmpID = toInteger(EmpID),\n\t\tStartDate = toDate(StartDate,'MM/dd/yyyy'),\n\t\tEndDate = toDate(EndDate,'MM/dd/yyyy'),\n\t\tprocesstime = currentTimestamp()) ~> TypeConversionsAndSetAttrs"
						},
						{
							"name": "LookupIDs",
							"script": "TypeConversionsAndSetAttrs, TypeConversions lookup(TypeConversionsAndSetAttrs@EmpID == TypeConversions@EmpID,\n\tbroadcast: 'none')~> LookupIDs"
						},
						{
							"name": "ConditionalSplit1",
							"script": "NormNames split(isNull(iscurrent),\n\tdisjoint: false) ~> ConditionalSplit1@(NewRow, CheckForUpdates)"
						},
						{
							"name": "checkForChanges",
							"script": "NameNorm2, TypeConversions exists(NameNorm2@EmpID == TypeConversions@EmpID,\n\tnegate:false,\n\tbroadcast: 'none')~> checkForChanges"
						},
						{
							"name": "SetAttrsForNew",
							"script": "ConditionalSplit1@NewRow derive(iscurrent = 1,\n\t\tsurrogatekey = toString(crc32(EmpID,EmpFunction))) ~> SetAttrsForNew"
						},
						{
							"name": "SetAttrsInactive",
							"description": "make iscurrent 0",
							"script": "checkForChanges derive(iscurrent = 0) ~> SetAttrsInactive"
						},
						{
							"name": "SetAttrsUpdate",
							"script": "checkForChanges derive(iscurrent = 1) ~> SetAttrsUpdate"
						},
						{
							"name": "NormNames",
							"script": "LookupIDs select(mapColumn(\n\t\tEmpID = TypeConversionsAndSetAttrs@EmpID,\n\t\tRegion = Employees1@Region,\n\t\tStatus = Employees1@Status,\n\t\tLevel = Employees1@Level,\n\t\tRole = Employees1@Role,\n\t\tStartDate = TypeConversionsAndSetAttrs@StartDate,\n\t\tEndDate = TypeConversionsAndSetAttrs@EndDate,\n\t\tEmpFunction = Function,\n\t\tiscurrent,\n\t\tprocesstime = TypeConversionsAndSetAttrs@processtime,\n\t\tsurrogatekey\n\t))~> NormNames"
						},
						{
							"name": "InactiveFields",
							"script": "SetAttrsInactive select(mapColumn(\n\t\tEmpID,\n\t\tStatus,\n\t\tEndDate,\n\t\tiscurrent,\n\t\tprocesstime\n\t))~> InactiveFields"
						},
						{
							"name": "AlterRow1",
							"script": "InactiveFields alterRow(updateIf(true())) ~> AlterRow1"
						},
						{
							"name": "NullFilter",
							"description": "Filter out NULLs from source file",
							"script": "Employees1 filter(!isNull(EmpID)) ~> NullFilter"
						},
						{
							"name": "NameNorm2",
							"script": "ConditionalSplit1@CheckForUpdates select(mapColumn(\n\t\tEmpID,\n\t\tRegion,\n\t\tStatus,\n\t\tLevel,\n\t\tRole,\n\t\tStartDate,\n\t\tEndDate,\n\t\tEmpFunction,\n\t\tiscurrent,\n\t\tprocesstime,\n\t\tsurrogatekey\n\t))~> NameNorm2"
						}
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Onprim')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "source1",
							"typeProperties": {},
							"script": "source(output(\n\t\tID as string,\n\t\tNames as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText3",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"script": "source1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> sink1"
						}
					],
					"transformations": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLtoAzureSQL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SQLASQL",
								"type": "DatasetReference"
							},
							"name": "source1",
							"typeProperties": {},
							"script": "source(output(\n\t\tID as string,\n\t\tNames as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Azure_Conditions_split",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"script": "ConditionalSplit1@name sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false) ~> sink1"
						}
					],
					"transformations": [
						{
							"name": "ConditionalSplit1",
							"script": "source1 split(Names=='B',\n\tdisjoint: false) ~> ConditionalSplit1@(name)"
						}
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SV_CSVtoSQL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SV_DelimitedText",
								"type": "DatasetReference"
							},
							"name": "CSVFile",
							"typeProperties": {},
							"script": "source(output(\n\t\tTable as string,\n\t\tYear as string,\n\t\tRcode as string,\n\t\tDemographic as string,\n\t\tDescription as string,\n\t\tEst1 as string,\n\t\tEst2 as string,\n\t\tEst3 as string,\n\t\tEst4 as string,\n\t\tEst5 as string,\n\t\tEst6 as string,\n\t\tEst7 as string,\n\t\tEst8 as string,\n\t\tEst9 as string,\n\t\tEst10 as string,\n\t\tEst11 as string,\n\t\tDQF1 as string,\n\t\tDQF2 as string,\n\t\tDQF3 as string,\n\t\tDQF4 as string,\n\t\tDQF5 as string,\n\t\tDQF6 as string,\n\t\tDQF7 as string,\n\t\tDQF8 as string,\n\t\tDQF9 as string,\n\t\tDQF10 as string,\n\t\tDQF11 as string,\n\t\tRSE1 as string,\n\t\tRSE2 as string,\n\t\tRSE3 as string,\n\t\tRSE4 as string,\n\t\tRSE5 as string,\n\t\tRSE6 as string,\n\t\tRSE7 as string,\n\t\tRSE8 as string,\n\t\tRSE9 as string,\n\t\tRSE10 as string,\n\t\tRSE11 as string,\n\t\tP1 as string,\n\t\tP2 as string,\n\t\tP3 as string,\n\t\tP4 as string,\n\t\tP5 as string,\n\t\tP6 as string,\n\t\tP7 as string,\n\t\tP8 as string,\n\t\tP9 as string,\n\t\tP10 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\twildcardPaths:['HES2018-Table10.csv']) ~> CSVFile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SV_AzureSqlTable",
								"type": "DatasetReference"
							},
							"name": "SQL",
							"script": "CSVFile sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false) ~> SQL"
						}
					],
					"transformations": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Success')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText2",
								"type": "DatasetReference"
							},
							"name": "source1",
							"typeProperties": {},
							"script": "source(output(\n\t\tid as string,\n\t\tname as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"script": "source1 sink(input(\n\t\tID as string,\n\t\tNames as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tmapColumn(\n\t\tID = id,\n\t\tNames = name\n\t)) ~> sink1"
						}
					],
					"transformations": []
				}
			},
			"dependsOn": []
		}
	]
}